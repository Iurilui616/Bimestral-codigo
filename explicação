Vou explicar TODAS as linhas do c√≥digo. Como √© muito extenso, vou dividir em se√ß√µes detalhadas:

## SE√á√ÉO 1: ESTRUTURA HTML B√ÅSICA E IN√çCIO DO CSS (Linhas 1-35)

```html
<!DOCTYPE html>
```

**Linha 1**: Declara que este √© um documento HTML5 moderno

```html
<html lang="pt-BR">
```

**Linha 2**: Inicia o elemento HTML e define o idioma como portugu√™s brasileiro para acessibilidade

```html
<head>
```

**Linha 3**: Inicia a se√ß√£o head onde ficam metadados e configura√ß√µes

```html
    <meta charset="UTF-8">
```

**Linha 4**: Define codifica√ß√£o UTF-8 para suportar caracteres especiais e acentos

```html
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
```

**Linha 5**: Configura viewport para responsividade - largura igual ao dispositivo, zoom inicial 1.0

```html
    <title>üåü ACADEMIA DOS MESTRES SUPREMOS - EDI√á√ÉO DEFINITIVA üåü</title>
```

**Linha 6**: T√≠tulo que aparece na aba do navegador, com emojis para visual atrativo

```html
    <style>
```

**Linha 7**: Inicia a se√ß√£o CSS interna

```css
        @import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700;900&family=Creepster&family=Cinzel:wght@400;600;900&display=swap');
```

**Linha 8**: Importa 3 fontes do Google Fonts:

- Orbitron (futurista, pesos 400/700/900)
- Creepster (decorativa)
- Cinzel (elegante, pesos 400/600/900)
- display=swap otimiza carregamento


```css
        * {
```

**Linha 10**: Seletor universal - aplica a todos os elementos

```css
            margin: 0;
```

**Linha 11**: Remove margem padr√£o de todos os elementos

```css
            padding: 0;
```

**Linha 12**: Remove padding padr√£o de todos os elementos

```css
            box-sizing: border-box;
```

**Linha 13**: Faz padding e border serem inclu√≠dos na largura/altura total

```css
        }
```

**Linha 14**: Fecha o seletor universal

```css
        body {
```

**Linha 16**: Inicia estiliza√ß√£o do elemento body

```css
            font-family: 'Orbitron', monospace;
```

**Linha 17**: Define fonte principal como Orbitron, fallback monospace

```css
            background: #000;
```

**Linha 18**: Fundo preto s√≥lido

```css
            color: #fff;
```

**Linha 19**: Texto branco por padr√£o

```css
            overflow-x: hidden;
```

**Linha 20**: Remove scroll horizontal para evitar barras indesejadas

```css
            min-height: 100vh;
```

**Linha 21**: Altura m√≠nima de 100% da viewport (tela cheia)

```css
            cursor: crosshair;
```

**Linha 22**: Cursor em formato de mira para tema de jogo

```css
        }
```

**Linha 23**: Fecha estiliza√ß√£o do body

```css
        .game-container {
```

**Linha 25**: Inicia classe do container principal do jogo

```css
            width: 100vw;
```

**Linha 26**: Largura de 100% da viewport

```css
            min-height: 100vh;
```

**Linha 27**: Altura m√≠nima de 100% da viewport

```css
            position: relative;
```

**Linha 28**: Posicionamento relativo para elementos filhos absolutos

```css
            background:
                radial-gradient(circle at 20% 20%, rgba(255,0,128,0.3) 0%, transparent 50%),
```

**Linha 29-30**: Primeiro gradiente radial - c√≠rculo rosa no canto superior esquerdo

```css
                radial-gradient(circle at 80% 80%, rgba(0,255,128,0.3) 0%, transparent 50%),
```

**Linha 31**: Segundo gradiente radial - c√≠rculo verde no canto inferior direito

```css
                radial-gradient(circle at 50% 10%, rgba(128,0,255,0.3) 0%, transparent 50%),
```

**Linha 32**: Terceiro gradiente radial - c√≠rculo roxo no topo central

```css
                radial-gradient(circle at 10% 90%, rgba(255,128,0,0.3) 0%, transparent 50%),
```

**Linha 33**: Quarto gradiente radial - c√≠rculo laranja no canto inferior esquerdo

```css
                linear-gradient(135deg, #0a0a0a, #1a0a1a, #0a1a0a, #1a1a0a);
```

**Linha 34**: Gradiente linear base com tons escuros variados

```css
            background-size: 400% 400%;
```

**Linha 35**: Tamanho do background 4x maior para permitir anima√ß√£o

## SE√á√ÉO 2: ANIMA√á√ïES E PART√çCULAS (Linhas 36-72)

```css
            animation: cosmicGradient 20s ease infinite;
```

**Linha 36**: Aplica anima√ß√£o c√≥smica de 20 segundos, suave, infinita

```css
        }
```

**Linha 37**: Fecha classe game-container

```css
        @keyframes cosmicGradient {
```

**Linha 39**: Define anima√ß√£o cosmicGradient

```css
            0%, 100% { background-position: 0% 50%; }
```

**Linha 40**: No in√≠cio e fim, background na posi√ß√£o 0% horizontal, 50% vertical

```css
            25% { background-position: 100% 0%; }
```

**Linha 41**: Aos 25%, move para 100% horizontal, 0% vertical

```css
            50% { background-position: 100% 100%; }
```

**Linha 42**: Aos 50%, move para 100% horizontal, 100% vertical

```css
            75% { background-position: 0% 100%; }
```

**Linha 43**: Aos 75%, move para 0% horizontal, 100% vertical

```css
        }
```

**Linha 44**: Fecha anima√ß√£o cosmicGradient

```css
        .particle-system {
```

**Linha 46**: Inicia classe do sistema de part√≠culas

```css
            position: fixed;
```

**Linha 47**: Posi√ß√£o fixa na tela (n√£o move com scroll)

```css
            top: 0;
```

**Linha 48**: Alinhado ao topo

```css
            left: 0;
```

**Linha 49**: Alinhado √† esquerda

```css
            width: 100%;
```

**Linha 50**: Largura total da tela

```css
            height: 100%;
```

**Linha 51**: Altura total da tela

```css
            pointer-events: none;
```

**Linha 52**: N√£o interfere com cliques (part√≠culas s√£o decorativas)

```css
            z-index: 1;
```

**Linha 53**: Camada baixa (atr√°s de outros elementos)

```css
        }
```

**Linha 54**: Fecha classe particle-system

```css
        .particle {
```

**Linha 56**: Inicia classe das part√≠culas individuais

```css
            position: absolute;
```

**Linha 57**: Posicionamento absoluto dentro do sistema

```css
            border-radius: 50%;
```

**Linha 58**: Formato circular

```css
            animation: particleFloat 15s linear infinite;
```

**Linha 59**: Anima√ß√£o de flutua√ß√£o de 15 segundos, linear, infinita

```css
        }
```

**Linha 60**: Fecha classe particle

```css
        @keyframes particleFloat {
```

**Linha 62**: Define anima√ß√£o particleFloat

```css
            0% {
                transform: translateY(100vh) translateX(0) rotate(0deg) scale(0);
                opacity: 0;
            }
```

**Linha 63-66**: No in√≠cio: embaixo da tela, sem movimento horizontal, sem rota√ß√£o, tamanho 0, invis√≠vel

```css
            10% {
                opacity: 1;
                transform: translateY(90vh) translateX(20px) rotate(45deg) scale(1);
            }
```

**Linha 67-70**: Aos 10%: vis√≠vel, sobe um pouco, move 20px √† direita, roda 45¬∞, tamanho normal

```css
            90% {
                opacity: 1;
                transform: translateY(10vh) translateX(200px) rotate(315deg) scale(1);
            }
```

**Linha 71-74**: Aos 90%: ainda vis√≠vel, quase no topo, 200px √† direita, roda 315¬∞

```css
            100% {
                transform: translateY(-10vh) translateX(250px) rotate(360deg) scale(0);
                opacity: 0;
            }
```

**Linha 75-78**: No fim: acima da tela, 250px √† direita, rota√ß√£o completa, tamanho 0, invis√≠vel

```css
        }
```

**Linha 79**: Fecha anima√ß√£o particleFloat

## SE√á√ÉO 3: MENU PRINCIPAL (Linhas 81-125)

```css
        .main-menu {
```

**Linha 81**: Inicia classe do menu principal

```css
            display: flex;
```

**Linha 82**: Layout flexbox

```css
            flex-direction: column;
```

**Linha 83**: Dire√ß√£o vertical (elementos empilhados)

```css
            justify-content: center;
```

**Linha 84**: Centraliza verticalmente

```css
            align-items: center;
```

**Linha 85**: Centraliza horizontalmente

```css
            min-height: 100vh;
```

**Linha 86**: Altura m√≠nima de tela cheia

```css
            text-align: center;
```

**Linha 87**: Texto centralizado

```css
            position: relative;
```

**Linha 88**: Posicionamento relativo

```css
            background: radial-gradient(ellipse at center, rgba(26,0,51,0.8), rgba(0,0,0,0.9));
```

**Linha 89**: Fundo com gradiente radial el√≠ptico do centro (roxo escuro para preto)

```css
            backdrop-filter: blur(10px);
```

**Linha 90**: Efeito de desfoque no fundo

```css
        }
```

**Linha 91**: Fecha classe main-menu

```css
        .game-title {
```

**Linha 93**: Inicia classe do t√≠tulo do jogo

```css
            font-family: 'Cinzel', serif;
```

**Linha 94**: Fonte Cinzel (elegante, serifada)

```css
            font-size: clamp(2rem, 8vw, 5rem);
```

**Linha 95**: Tamanho responsivo: m√≠nimo 2rem, ideal 8% da largura, m√°ximo 5rem

```css
            font-weight: 900;
```

**Linha 96**: Peso ultra-negrito

```css
            background: linear-gradient(45deg, #ff0080, #8000ff, #0080ff, #00ff80, #ff8000);
```

**Linha 97**: Gradiente linear diagonal com 5 cores (rosa, roxo, azul, verde, laranja)

```css
            background-size: 400% 400%;
```

**Linha 98**: Tamanho do gradiente 4x maior para anima√ß√£o

```css
            -webkit-background-clip: text;
```

**Linha 99**: Webkit: aplica background apenas no texto

```css
            -webkit-text-fill-color: transparent;
```

**Linha 100**: Webkit: torna o texto transparente para mostrar o gradiente

```css
            background-clip: text;
```

**Linha 101**: Vers√£o padr√£o do background-clip

```css
            animation: epicRainbow 3s ease-in-out infinite;
```

**Linha 102**: Anima√ß√£o arco-√≠ris de 3 segundos, suave, infinita

```css
            margin-bottom: 1rem;
```

**Linha 103**: Margem inferior de 1rem

```css
            text-shadow: 0 0 50px rgba(255,255,255,0.5);
```

**Linha 104**: Sombra branca difusa no texto

```css
            position: relative;
```

**Linha 105**: Posicionamento relativo para pseudo-elementos

```css
        }
```

**Linha 106**: Fecha classe game-title

```css
        .game-title::before,
        .game-title::after {
```

**Linha 108-109**: Seleciona ambos os pseudo-elementos do t√≠tulo

```css
            content: 'üåü';
```

**Linha 110**: Conte√∫do: emoji de estrela

```css
            position: absolute;
```

**Linha 111**: Posicionamento absoluto

```css
            top: 50%;
```

**Linha 112**: Alinhado ao meio vertical

```css
            transform: translateY(-50%);
```

**Linha 113**: Centraliza verticalmente

```css
            font-size: 2rem;
```

**Linha 114**: Tamanho da estrela

```css
            animation: starRotate 4s linear infinite;
```

**Linha 115**: Anima√ß√£o de rota√ß√£o de 4 segundos, linear, infinita

```css
        }
```

**Linha 116**: Fecha seletor dos pseudo-elementos

```css
        .game-title::before {
```

**Linha 118**: Pseudo-elemento before (estrela da esquerda)

```css
            left: -60px;
```

**Linha 119**: Posicionado 60px √† esquerda do t√≠tulo

```css
        }
```

**Linha 120**: Fecha pseudo-elemento before

```css
        .game-title::after {
```

**Linha 122**: Pseudo-elemento after (estrela da direita)

```css
            right: -60px;
```

**Linha 123**: Posicionado 60px √† direita do t√≠tulo

```css
            animation-direction: reverse;
```

**Linha 124**: Rota√ß√£o reversa (sentido anti-hor√°rio)

```css
        }
```

**Linha 125**: Fecha pseudo-elemento after

## SE√á√ÉO 4: ANIMA√á√ïES DO T√çTULO (Linhas 127-138)

```css
        @keyframes epicRainbow {
```

**Linha 127**: Define anima√ß√£o epicRainbow

```css
            0%, 100% { background-position: 0% 50%; }
```

**Linha 128**: In√≠cio e fim: gradiente na posi√ß√£o inicial

```css
            50% { background-position: 100% 50%; }
```

**Linha 129**: Meio: gradiente movido para a direita

```css
        }
```

**Linha 130**: Fecha anima√ß√£o epicRainbow

```css
        @keyframes starRotate {
```

**Linha 132**: Define anima√ß√£o starRotate

```css
            from { transform: translateY(-50%) rotate(0deg); }
```

**Linha 133**: In√≠cio: centralizado verticalmente, sem rota√ß√£o

```css
            to { transform: translateY(-50%) rotate(360deg); }
```

**Linha 134**: Fim: centralizado verticalmente, rota√ß√£o completa

```css
        }
```

**Linha 135**: Fecha anima√ß√£o starRotate

## SE√á√ÉO 5: SUBT√çTULO (Linhas 137-148)

```css
        .subtitle {
```

**Linha 137**: Inicia classe do subt√≠tulo

```css
            font-size: clamp(1rem, 3vw, 1.8rem);
```

**Linha 138**: Tamanho responsivo: m√≠n 1rem, ideal 3% largura, m√°x 1.8rem

```css
            margin-bottom: 3rem;
```

**Linha 139**: Margem inferior de 3rem

```css
            background: linear-gradient(45deg, #ff6666, #66ff66, #6666ff);
```

**Linha 140**: Gradiente com vermelho, verde e azul claros

```css
            background-size: 200% 200%;
```

**Linha 141**: Tamanho do gradiente 2x maior para anima√ß√£o

```css
            -webkit-background-clip: text;
```

**Linha 142**: Webkit: aplica gradiente apenas no texto

```css
            -webkit-text-fill-color: transparent;
```

**Linha 143**: Webkit: texto transparente para mostrar gradiente

```css
            background-clip: text;
```

**Linha 144**: Vers√£o padr√£o do background-clip

```css
            animation: subtitleGlow 2s ease-in-out infinite;
```

**Linha 145**: Anima√ß√£o de brilho de 2 segundos, suave, infinita

```css
        }
```

**Linha 146**: Fecha classe subtitle

```css
        @keyframes subtitleGlow {
```

**Linha 148**: Define anima√ß√£o subtitleGlow

```css
            0%, 100% { background-position: 0% 50%; }
```

**Linha 149**: In√≠cio e fim: posi√ß√£o inicial do gradiente

```css
            50% { background-position: 100% 50%; }
```

**Linha 150**: Meio: gradiente movido para a direita

```css
        }
```

**Linha 151**: Fecha anima√ß√£o subtitleGlow

## SE√á√ÉO 6: BOT√ïES DO MENU (Linhas 153-197)

```css
        .menu-buttons {
```

**Linha 153**: Inicia classe do container dos bot√µes

```css
            display: flex;
```

**Linha 154**: Layout flexbox

```css
            flex-direction: column;
```

**Linha 155**: Dire√ß√£o vertical

```css
            gap: 1.5rem;
```

**Linha 156**: Espa√ßamento de 1.5rem entre bot√µes

```css
            margin-bottom: 2rem;
```

**Linha 157**: Margem inferior de 2rem

```css
        }
```

**Linha 158**: Fecha classe menu-buttons

```css
        .menu-btn {
```

**Linha 160**: Inicia classe dos bot√µes do menu

```css
            padding: 1.5rem 3rem;
```

**Linha 161**: Padding interno: 1.5rem vertical, 3rem horizontal

```css
            font-size: clamp(1rem, 2.5vw, 1.4rem);
```

**Linha 162**: Tamanho responsivo: m√≠n 1rem, ideal 2.5% largura, m√°x 1.4rem

```css
            font-weight: bold;
```

**Linha 163**: Texto em negrito

```css
            background: linear-gradient(45deg, #ff0080, #8000ff, #0080ff);
```

**Linha 164**: Gradiente diagonal: rosa, roxo, azul

```css
            background-size: 300% 300%;
```

**Linha 165**: Tamanho do gradiente 3x maior para anima√ß√£o

```css
            border: 3px solid transparent;
```

**Linha 166**: Borda transparente de 3px

```css
            border-radius: 20px;
```

**Linha 167**: Bordas arredondadas

```css
            color: white;
```

**Linha 168**: Texto branco

```css
            cursor: pointer;
```

**Linha 169**: Cursor de ponteiro (clic√°vel)

```css
            transition: all 0.4s ease;
```

**Linha 170**: Transi√ß√£o suave de 0.4s para todas as propriedades

```css
            font-family: inherit;
```

**Linha 171**: Herda a fonte do elemento pai

```css
            text-transform: uppercase;
```

**Linha 172**: Texto em mai√∫sculas

```css
            letter-spacing: 2px;
```

**Linha 173**: Espa√ßamento entre letras de 2px

```css
            position: relative;
```

**Linha 174**: Posicionamento relativo para pseudo-elementos

```css
            overflow: hidden;
```

**Linha 175**: Esconde conte√∫do que sai dos limites

```css
            box-shadow: 0 0 30px rgba(255,0,128,0.4);
```

**Linha 176**: Sombra rosa difusa

```css
            animation: menuBtnGlow 3s ease-in-out infinite;
```

**Linha 177**: Anima√ß√£o de brilho de 3 segundos, suave, infinita

```css
        }
```

**Linha 178**: Fecha classe menu-btn

```css
        @keyframes menuBtnGlow {
```

**Linha 180**: Define anima√ß√£o menuBtnGlow

```css
            0%, 100% {
                background-position: 0% 50%;
                box-shadow: 0 0 30px rgba(255,0,128,0.4);
            }
```

**Linha 181-184**: In√≠cio e fim: gradiente inicial, sombra rosa

```css
            50% {
                background-position: 100% 50%;
                box-shadow: 0 0 50px rgba(128,0,255,0.6);
            }
```

**Linha 185-188**: Meio: gradiente movido, sombra roxa mais intensa

```css
        }
```

**Linha 189**: Fecha anima√ß√£o menuBtnGlow

```css
        .menu-btn::before {
```

**Linha 191**: Pseudo-elemento before dos bot√µes

```css
            content: '';
```

**Linha 192**: Conte√∫do vazio

```css
            position: absolute;
```

**Linha 193**: Posicionamento absoluto

```css
            top: 0;
```

**Linha 194**: Alinhado ao topo

```css
            left: -100%;
```

**Linha 195**: Inicialmente fora da tela √† esquerda

```css
            width: 100%;
```

**Linha 196**: Largura total do bot√£o

```css
            height: 100%;
```

**Linha 197**: Altura total do bot√£o

Continuarei com o resto do c√≥digo. Gostaria que eu prossiga com as pr√≥ximas se√ß√µes?

## SE√á√ÉO 7: EFEITOS DOS BOT√ïES (Linhas 198-210)

```css
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
```

**Linha 198**: Gradiente horizontal: transparente ‚Üí branco semi-transparente ‚Üí transparente (efeito de brilho)

```css
            transition: left 0.6s;
```

**Linha 199**: Transi√ß√£o suave da propriedade left em 0.6 segundos

```css
        }
```

**Linha 200**: Fecha pseudo-elemento before

```css
        .menu-btn:hover::before {
```

**Linha 202**: Pseudo-elemento before no hover

```css
            left: 100%;
```

**Linha 203**: Move o brilho para fora da tela √† direita (cria efeito de passagem)

```css
        }
```

**Linha 204**: Fecha hover do pseudo-elemento

```css
        .menu-btn:hover {
```

**Linha 206**: Estado hover dos bot√µes

```css
            transform: scale(1.05) translateY(-5px);
```

**Linha 207**: Aumenta 5% e eleva 5px

```css
            box-shadow: 0 15px 40px rgba(255,0,128,0.6);
```

**Linha 208**: Sombra mais intensa e elevada

```css
            border-color: #fff;
```

**Linha 209**: Borda fica branca

```css
        }
```

**Linha 210**: Fecha hover dos bot√µes

## SE√á√ÉO 8: SELE√á√ÉO DE PROFESSORES (Linhas 212-223)

```css
        .professor-select {
```

**Linha 212**: Inicia classe da tela de sele√ß√£o de professores

```css
            display: none;
```

**Linha 213**: Inicialmente oculta

```css
            width: 100%;
```

**Linha 214**: Largura total

```css
            min-height: 100vh;
```

**Linha 215**: Altura m√≠nima de tela cheia

```css
            position: relative;
```

**Linha 216**: Posicionamento relativo

```css
            background: linear-gradient(135deg, rgba(26,0,51,0.9), rgba(51,0,102,0.8));
```

**Linha 217**: Gradiente diagonal roxo escuro

```css
            padding: 2rem;
```

**Linha 218**: Padding interno de 2rem

```css
            overflow-y: auto;
```

**Linha 219**: Permite scroll vertical se necess√°rio

```css
        }
```

**Linha 220**: Fecha classe professor-select

```css
        .professor-grid {
```

**Linha 222**: Inicia classe da grade de professores

```css
            display: grid;
```

**Linha 223**: Layout CSS Grid

```css
            grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
```

**Linha 224**: Colunas responsivas: m√≠nimo 320px, m√°ximo 1 fra√ß√£o, ajuste autom√°tico

```css
            gap: 2rem;
```

**Linha 225**: Espa√ßamento de 2rem entre cards

```css
            max-width: 1400px;
```

**Linha 226**: Largura m√°xima de 1400px

```css
            margin: 0 auto;
```

**Linha 227**: Centraliza horizontalmente

```css
            padding: 2rem 0;
```

**Linha 228**: Padding vertical de 2rem

```css
        }
```

**Linha 229**: Fecha classe professor-grid

## SE√á√ÉO 9: CARDS DOS PROFESSORES (Linhas 231-280)

```css
        .professor-card {
```

**Linha 231**: Inicia classe dos cards de professores

```css
            background: linear-gradient(135deg, rgba(0,0,0,0.8), rgba(30,30,30,0.9));
```

**Linha 232**: Gradiente diagonal escuro

```css
            border: 3px solid transparent;
```

**Linha 233**: Borda transparente de 3px

```css
            border-radius: 20px;
```

**Linha 234**: Bordas arredondadas

```css
            padding: 2rem;
```

**Linha 235**: Padding interno de 2rem

```css
            cursor: pointer;
```

**Linha 236**: Cursor de ponteiro

```css
            transition: all 0.5s ease;
```

**Linha 237**: Transi√ß√£o suave de 0.5s

```css
            position: relative;
```

**Linha 238**: Posicionamento relativo

```css
            overflow: hidden;
```

**Linha 239**: Esconde overflow

```css
            backdrop-filter: blur(15px);
```

**Linha 240**: Efeito de desfoque no fundo

```css
            box-shadow: 0 10px 30px rgba(0,0,0,0.5);
```

**Linha 241**: Sombra preta difusa

```css
        }
```

**Linha 242**: Fecha classe professor-card

```css
        .professor-card::before {
```

**Linha 244**: Pseudo-elemento before dos cards

```css
            content: '';
```

**Linha 245**: Conte√∫do vazio

```css
            position: absolute;
```

**Linha 246**: Posicionamento absoluto

```css
            top: 0;
```

**Linha 247**: Alinhado ao topo

```css
            left: 0;
```

**Linha 248**: Alinhado √† esquerda

```css
            right: 0;
```

**Linha 249**: Alinhado √† direita

```css
            bottom: 0;
```

**Linha 250**: Alinhado √† base (cobre todo o card)

```css
            background: linear-gradient(45deg, transparent, rgba(255,255,255,0.1), transparent);
```

**Linha 251**: Gradiente de brilho diagonal

```css
            transform: translateX(-100%);
```

**Linha 252**: Inicialmente fora da tela √† esquerda

```css
            transition: transform 0.6s;
```

**Linha 253**: Transi√ß√£o da transforma√ß√£o

```css
        }
```

**Linha 254**: Fecha pseudo-elemento before

```css
        .professor-card:hover::before {
```

**Linha 256**: Pseudo-elemento before no hover

```css
            transform: translateX(100%);
```

**Linha 257**: Move para fora da tela √† direita (efeito de brilho passando)

```css
        }
```

**Linha 258**: Fecha hover do pseudo-elemento

```css
        .professor-card:hover {
```

**Linha 260**: Estado hover dos cards

```css
            transform: scale(1.05) rotateY(5deg);
```

**Linha 261**: Aumenta 5% e rotaciona 5¬∞ no eixo Y (efeito 3D)

```css
            box-shadow: 0 20px 50px rgba(0,0,0,0.7);
```

**Linha 262**: Sombra mais intensa e elevada

```css
            z-index: 10;
```

**Linha 263**: Eleva na camada Z (fica por cima)

```css
        }
```

**Linha 264**: Fecha hover dos cards

```css
        .professor-card.unlocked {
```

**Linha 266**: Cards de professores desbloqueados

```css
            border-color: #00ff88;
```

**Linha 267**: Borda verde

```css
            box-shadow: 0 0 30px rgba(0,255,136,0.4);
```

**Linha 268**: Sombra verde

```css
        }
```

**Linha 269**: Fecha classe unlocked

```css
        .professor-card.completed {
```

**Linha 271**: Cards de professores derrotados

```css
            border-color: #ffaa00;
```

**Linha 272**: Borda laranja

```css
            box-shadow: 0 0 40px rgba(255,170,0,0.5);
```

**Linha 273**: Sombra laranja mais intensa

```css
            background: linear-gradient(135deg, rgba(255,170,0,0.2), rgba(255,215,0,0.1));
```

**Linha 274**: Fundo com toque dourado

```css
        }
```

**Linha 275**: Fecha classe completed

```css
        .professor-card.locked {
```

**Linha 277**: Cards de professores bloqueados

```css
            opacity: 0.5;
```

**Linha 278**: Semi-transparente

```css
            cursor: not-allowed;
```

**Linha 279**: Cursor de proibido

```css
            border-color: #666;
```

**Linha 280**: Borda cinza

```css
        }
```

**Linha 281**: Fecha classe locked

## SE√á√ÉO 10: AVATAR DOS PROFESSORES (Linhas 283-295)

```css
        .professor-avatar {
```

**Linha 283**: Inicia classe do avatar dos professores

```css
            width: 100px;
```

**Linha 284**: Largura de 100px

```css
            height: 100px;
```

**Linha 285**: Altura de 100px (quadrado)

```css
            border-radius: 50%;
```

**Linha 286**: Formato circular

```css
            margin: 0 auto 1rem;
```

**Linha 287**: Centralizado horizontalmente, margem inferior 1rem

```css
            display: flex;
```

**Linha 288**: Layout flexbox

```css
            align-items: center;
```

**Linha 289**: Centraliza verticalmente

```css
            justify-content: center;
```

**Linha 290**: Centraliza horizontalmente

```css
            font-size: 3rem;
```

**Linha 291**: Tamanho do emoji 3rem

```css
            border: 3px solid;
```

**Linha 292**: Borda s√≥lida de 3px (cor definida dinamicamente)

```css
            animation: professorFloat 3s ease-in-out infinite;
```

**Linha 293**: Anima√ß√£o de flutua√ß√£o de 3s, suave, infinita

```css
        }
```

**Linha 294**: Fecha classe professor-avatar

```css
        @keyframes professorFloat {
```

**Linha 296**: Define anima√ß√£o professorFloat

```css
            0%, 100% { transform: translateY(0px) scale(1); }
```

**Linha 297**: In√≠cio e fim: posi√ß√£o normal, tamanho normal

```css
            50% { transform: translateY(-10px) scale(1.05); }
```

**Linha 298**: Meio: sobe 10px, aumenta 5%

```css
        }
```

**Linha 299**: Fecha anima√ß√£o professorFloat

## SE√á√ÉO 11: INFORMA√á√ïES DOS PROFESSORES (Linhas 301-340)

```css
        .professor-name {
```

**Linha 301**: Inicia classe do nome do professor

```css
            font-size: 1.5rem;
```

**Linha 302**: Tamanho da fonte 1.5rem

```css
            font-weight: bold;
```

**Linha 303**: Texto em negrito

```css
            margin-bottom: 0.5rem;
```

**Linha 304**: Margem inferior 0.5rem

```css
            text-align: center;
```

**Linha 305**: Texto centralizado

```css
        }
```

**Linha 306**: Fecha classe professor-name

```css
        .professor-subject {
```

**Linha 308**: Inicia classe da mat√©ria do professor

```css
            font-size: 1.1rem;
```

**Linha 309**: Tamanho da fonte 1.1rem

```css
            margin-bottom: 1rem;
```

**Linha 310**: Margem inferior 1rem

```css
            text-align: center;
```

**Linha 311**: Texto centralizado

```css
            font-weight: 600;
```

**Linha 312**: Peso da fonte semi-negrito

```css
        }
```

**Linha 313**: Fecha classe professor-subject

```css
        .professor-description {
```

**Linha 315**: Inicia classe da descri√ß√£o do professor

```css
            font-size: 0.9rem;
```

**Linha 316**: Tamanho da fonte 0.9rem (menor)

```css
            text-align: center;
```

**Linha 317**: Texto centralizado

```css
            line-height: 1.4;
```

**Linha 318**: Altura da linha 1.4 (espa√ßamento entre linhas)

```css
            margin-bottom: 1rem;
```

**Linha 319**: Margem inferior 1rem

```css
            color: #ccc;
```

**Linha 320**: Cor cinza claro

```css
        }
```

**Linha 321**: Fecha classe professor-description

```css
        .professor-stats {
```

**Linha 323**: Inicia classe das estat√≠sticas do professor

```css
            display: grid;
```

**Linha 324**: Layout CSS Grid

```css
            grid-template-columns: repeat(3, 1fr);
```

**Linha 325**: 3 colunas de tamanho igual

```css
            gap: 0.5rem;
```

**Linha 326**: Espa√ßamento de 0.5rem entre itens

```css
            margin-bottom: 1rem;
```

**Linha 327**: Margem inferior 1rem

```css
        }
```

**Linha 328**: Fecha classe professor-stats

```css
        .stat-item {
```

**Linha 330**: Inicia classe dos itens de estat√≠stica

```css
            text-align: center;
```

**Linha 331**: Texto centralizado

```css
            background: rgba(255,255,255,0.1);
```

**Linha 332**: Fundo branco semi-transparente

```css
            padding: 0.5rem;
```

**Linha 333**: Padding interno 0.5rem

```css
            border-radius: 8px;
```

**Linha 334**: Bordas arredondadas

```css
            backdrop-filter: blur(5px);
```

**Linha 335**: Efeito de desfoque no fundo

```css
        }
```

**Linha 336**: Fecha classe stat-item

```css
        .stat-value {
```

**Linha 338**: Inicia classe do valor da estat√≠stica

```css
            font-size: 1.2rem;
```

**Linha 339**: Tamanho da fonte 1.2rem

```css
            font-weight: bold;
```

**Linha 340**: Texto em negrito

```css
            display: block;
```

**Linha 341**: Exibi√ß√£o em bloco (quebra linha)

```css
        }
```

**Linha 342**: Fecha classe stat-value

```css
        .stat-label {
```

**Linha 344**: Inicia classe do r√≥tulo da estat√≠stica

```css
            font-size: 0.7rem;
```

**Linha 345**: Tamanho da fonte pequeno

```css
            color: #aaa;
```

**Linha 346**: Cor cinza

```css
        }
```

**Linha 347**: Fecha classe stat-label

## SE√á√ÉO 12: ARENA DE BATALHA (Linhas 349-375)

```css
        .battle-arena {
```

**Linha 349**: Inicia classe da arena de batalha

```css
            display: none;
```

**Linha 350**: Inicialmente oculta

```css
            width: 100%;
```

**Linha 351**: Largura total

```css
            min-height: 100vh;
```

**Linha 352**: Altura m√≠nima de tela cheia

```css
            position: relative;
```

**Linha 353**: Posicionamento relativo

```css
            background:
                radial-gradient(circle at 30% 30%, rgba(255,0,0,0.3) 0%, transparent 50%),
```

**Linha 354-355**: Gradiente radial vermelho no canto superior esquerdo

```css
                radial-gradient(circle at 70% 70%, rgba(0,255,0,0.3) 0%, transparent 50%),
```

**Linha 356**: Gradiente radial verde no canto inferior direito

```css
                linear-gradient(135deg, #0a0a0a, #1a0a0a, #0a1a0a);
```

**Linha 357**: Gradiente linear base escuro

```css
            overflow: hidden;
```

**Linha 358**: Esconde overflow

```css
            padding: 1rem;
```

**Linha 359**: Padding interno 1rem

```css
        }
```

**Linha 360**: Fecha classe battle-arena

```css
        .battle-layout {
```

**Linha 362**: Inicia classe do layout de batalha

```css
            display: grid;
```

**Linha 363**: Layout CSS Grid

```css
            grid-template-areas:
                "boss boss"
                "dialogue dialogue"
                "player challenge";
```

**Linha 364-367**: Define √°reas nomeadas do grid: boss ocupa 2 colunas no topo, dialogue ocupa 2 colunas no meio, player e challenge dividem a linha inferior

```css
            grid-template-columns: 1fr 1fr;
```

**Linha 368**: 2 colunas de tamanho igual

```css
            grid-template-rows: auto auto 1fr;
```

**Linha 369**: 3 linhas: 2 autom√°ticas, 1 flex√≠vel

```css
            gap: 1rem;
```

**Linha 370**: Espa√ßamento de 1rem entre √°reas

```css
            height: 100vh;
```

**Linha 371**: Altura de tela cheia

```css
            max-width: 1200px;
```

**Linha 372**: Largura m√°xima 1200px

```css
            margin: 0 auto;
```

**Linha 373**: Centralizado horizontalmente

```css
        }
```

**Linha 374**: Fecha classe battle-layout

## SE√á√ÉO 13: PROFESSOR BOSS (Linhas 376-395)

```css
        .professor-boss {
```

**Linha 376**: Inicia classe do professor boss

```css
            grid-area: boss;
```

**Linha 377**: Ocupa a √°rea "boss" do grid

```css
            background: linear-gradient(135deg, rgba(0,0,0,0.9), rgba(50,0,50,0.8));
```

**Linha 378**: Gradiente diagonal escuro com toque roxo

```css
            border: 4px solid;
```

**Linha 379**: Borda s√≥lida de 4px (cor definida dinamicamente)

```css
            border-radius: 20px;
```

**Linha 380**: Bordas arredondadas

```css
            padding: 2rem;
```

**Linha 381**: Padding interno 2rem

```css
            text-align: center;
```

**Linha 382**: Texto centralizado

```css
            backdrop-filter: blur(15px);
```

**Linha 383**: Efeito de desfoque no fundo

```css
            animation: bossEntrance 4s ease-in-out infinite;
```

**Linha 384**: Anima√ß√£o de entrada do boss, 4s, suave, infinita

```css
        }
```

**Linha 385**: Fecha classe professor-boss

```css
        @keyframes bossEntrance {
```

**Linha 387**: Define anima√ß√£o bossEntrance

```css
            0%, 100% {
                transform: translateY(0px) scale(1);
                box-shadow: 0 0 30px currentColor;
            }
```

**Linha 388-391**: In√≠cio e fim: posi√ß√£o normal, sombra normal

```css
            50% {
                transform: translateY(-10px) scale(1.02);
                box-shadow: 0 0 50px currentColor;
            }
```

**Linha 392-395**: Meio: sobe 10px, aumenta 2%, sombra mais intensa

```css
        }
```

**Linha 396**: Fecha anima√ß√£o bossEntrance

## SE√á√ÉO 14: AVATAR DO BOSS (Linhas 398-410)

```css
        .boss-avatar {
```

**Linha 398**: Inicia classe do avatar do boss

```css
            width: 120px;
```

**Linha 399**: Largura 120px

```css
            height: 120px;
```

**Linha 400**: Altura 120px

```css
            border-radius: 50%;
```

**Linha 401**: Formato circular

```css
            margin: 0 auto 1rem;
```

**Linha 402**: Centralizado, margem inferior 1rem

```css
            display: flex;
```

**Linha 403**: Layout flexbox

```css
            align-items: center;
```

**Linha 404**: Centraliza verticalmente

```css
            justify-content: center;
```

**Linha 405**: Centraliza horizontalmente

```css
            font-size: 4rem;
```

**Linha 406**: Tamanho do emoji 4rem (maior que o avatar normal)

```css
            border: 4px solid;
```

**Linha 407**: Borda s√≥lida de 4px

```css
            animation: bossAvatarSpin 8s linear infinite;
```

**Linha 408**: Anima√ß√£o de rota√ß√£o de 8s, linear, infinita

```css
        }
```

**Linha 409**: Fecha classe boss-avatar

```css
        @keyframes bossAvatarSpin {
```

**Linha 411**: Define anima√ß√£o bossAvatarSpin

```css
            from { transform: rotate(0deg); }
```

**Linha 412**: In√≠cio: sem rota√ß√£o

```css
            to { transform: rotate(360deg); }
```

**Linha 413**: Fim: rota√ß√£o completa

```css
        }
```

**Linha 414**: Fecha anima√ß√£o bossAvatarSpin

## SE√á√ÉO 15: INFORMA√á√ïES DO BOSS (Linhas 416-428)

```css
        .boss-name {
```

**Linha 416**: Inicia classe do nome do boss

```css
            font-size: 2rem;
```

**Linha 417**: Tamanho da fonte 2rem

```css
            font-weight: 900;
```

**Linha 418**: Peso ultra-negrito

```css
            margin-bottom: 0.5rem;
```

**Linha 419**: Margem inferior 0.5rem

```css
            font-family: 'Cinzel', serif;
```

**Linha 420**: Fonte Cinzel (elegante)

```css
        }
```

**Linha 421**: Fecha classe boss-name

```css
        .boss-subject {
```

**Linha 423**: Inicia classe da mat√©ria do boss

```css
            font-size: 1.2rem;
```

**Linha 424**: Tamanho da fonte 1.2rem

```css
            margin-bottom: 1rem;
```

**Linha 425**: Margem inferior 1rem

```css
            font-weight: 600;
```

**Linha 426**: Peso semi-negrito

```css
        }
```

**Linha 427**: Fecha classe boss-subject

## SE√á√ÉO 16: SISTEMA DE HP (Linhas 429-470)

```css
        .hp-container {
```

**Linha 429**: Inicia classe do container de HP

```css
            margin-bottom: 1rem;
```

**Linha 430**: Margem inferior 1rem

```css
        }
```

**Linha 431**: Fecha classe hp-container

```css
        .hp-bar {
```

**Linha 433**: Inicia classe da barra de HP

```css
            width: 100%;
```

**Linha 434**: Largura total

```css
            height: 25px;
```

**Linha 435**: Altura 25px

```css
            background: rgba(0,0,0,0.8);
```

**Linha 436**: Fundo preto semi-transparente

```css
            border: 3px solid;
```

**Linha 437**: Borda s√≥lida de 3px

```css
            border-radius: 15px;
```

**Linha 438**: Bordas arredondadas

```css
            overflow: hidden;
```

**Linha 439**: Esconde overflow

```css
            position: relative;
```

**Linha 440**: Posicionamento relativo

```css
        }
```

**Linha 441**: Fecha classe hp-bar

```css
        .hp-fill {
```

**Linha 443**: Inicia classe do preenchimento da barra de HP

```css
            height: 100%;
```

**Linha 444**: Altura total da barra

```css
            background: linear-gradient(90deg, #ff0000, #ff6600, #ffff00, #00ff00);
```

**Linha 445**: Gradiente horizontal: vermelho ‚Üí laranja ‚Üí amarelo ‚Üí verde

```css
            transition: width 1s ease;
```

**Linha 446**: Transi√ß√£o suave da largura em 1s

```css
            border-radius: 12px;
```

**Linha 447**: Bordas arredondadas

```css
            position: relative;
```

**Linha 448**: Posicionamento relativo

```css
        }
```

**Linha 449**: Fecha classe hp-fill

```css
        .hp-fill::before {
```

**Linha 451**: Pseudo-elemento before da barra de HP

```css
            content: '';
```

**Linha 452**: Conte√∫do vazio

```css
            position: absolute;
```

**Linha 453**: Posicionamento absoluto

```css
            top: 0;
```

**Linha 454**: Alinhado ao topo

```css
            left: 0;
```

**Linha 455**: Alinhado √† esquerda

```css
            width: 100%;
```

**Linha 456**: Largura total

```css
            height: 100%;
```

**Linha 457**: Altura total

```css
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
```

**Linha 458**: Gradiente de brilho horizontal

```css
            animation: hpShine 2s linear infinite;
```

**Linha 459**: Anima√ß√£o de brilho de 2s, linear, infinita

```css
        }
```

**Linha 460**: Fecha pseudo-elemento before

```css
        @keyframes hpShine {
```

**Linha 462**: Define anima√ß√£o hpShine

```css
            0% { transform: translateX(-100%); }
```

**Linha 463**: In√≠cio: fora da tela √† esquerda

```css
            100% { transform: translateX(100%); }
```

**Linha 464**: Fim: fora da tela √† direita

```css
        }
```

**Linha 465**: Fecha anima√ß√£o hpShine

```css
        .hp-text {
```

**Linha 467**: Inicia classe do texto de HP

```css
            position: absolute;
```

**Linha 468**: Posicionamento absoluto

```css
            top: 50%;
```

**Linha 469**: Meio vertical

```css
            left: 50%;
```

**Linha 470**: Meio horizontal

```css
            transform: translate(-50%, -50%);
```

**Linha 471**: Centraliza perfeitamente

```css
            font-weight: bold;
```

**Linha 472**: Texto em negrito

```css
            color: #fff;
```

**Linha 473**: Cor branca

```css
            text-shadow: 2px 2px 4px #000;
```

**Linha 474**: Sombra preta no texto para legibilidade

```css
            font-size: 1rem;
```

**Linha 475**: Tamanho da fonte 1rem

```css
        }
```

**Linha 476**: Fecha classe hp-text

## SE√á√ÉO 17: √ÅREA DO JOGADOR (Linhas 478-510)

```css
        .player-area {
```

**Linha 478**: Inicia classe da √°rea do jogador

```css
            grid-area: player;
```

**Linha 479**: Ocupa a √°rea "player" do grid

```css
            background: linear-gradient(135deg, rgba(0,0,100,0.8), rgba(0,50,100,0.9));
```

**Linha 480**: Gradiente diagonal azul

```css
            border: 4px solid #00aaff;
```

**Linha 481**: Borda azul s√≥lida

```css
            border-radius: 20px;
```

**Linha 482**: Bordas arredondadas

```css
            padding: 2rem;
```

**Linha 483**: Padding interno 2rem

```css
            text-align: center;
```

**Linha 484**: Texto centralizado

```css
            backdrop-filter: blur(15px);
```

**Linha 485**: Efeito de desfoque no fundo

```css
            box-shadow: 0 0 30px #00aaff;
```

**Linha 486**: Sombra azul

```css
            animation: playerPulse 3s ease-in-out infinite;
```

**Linha 487**: Anima√ß√£o de pulsa√ß√£o de 3s, suave, infinita

```css
        }
```

**Linha 488**: Fecha classe player-area

```css
        @keyframes playerPulse {
```

**Linha 490**: Define anima√ß√£o playerPulse

```css
            0%, 100% { transform: scale(1); }
```

**Linha 491**: In√≠cio e fim: tamanho normal

```css
            50% { transform: scale(1.02); }
```

**Linha 492**: Meio: aumenta 2%

```css
        }
```

**Linha 493**: Fecha anima√ß√£o playerPulse

```css
        .player-avatar {
```

**Linha 495**: Inicia classe do avatar do jogador

```css
            width: 80px;
```

**Linha 496**: Largura 80px

```css
            height: 80px;
```

**Linha 497**: Altura 80px

```css
            background: linear-gradient(45deg, #00aaff, #0088ff);
```

**Linha 498**: Gradiente diagonal azul

```css
            border-radius: 50%;
```

**Linha 499**: Formato circular

```css
            display: flex;
```

**Linha 500**: Layout flexbox

```css
            align-items: center;
```

**Linha 501**: Centraliza verticalmente

```css
            justify-content: center;
```

**Linha 502**: Centraliza horizontalmente

```css
            font-size: 2.5rem;
```

**Linha 503**: Tamanho do emoji 2.5rem

```css
            margin: 0 auto 1rem;
```

**Linha 504**: Centralizado, margem inferior 1rem

```css
            border: 3px solid #00ffff;
```

**Linha 505**: Borda ciano

```css
            animation: playerGlow 2s ease-in-out infinite alternate;
```

**Linha 506**: Anima√ß√£o de brilho de 2s, suave, infinita, alternada

```css
        }
```

**Linha 507**: Fecha classe player-avatar

```css
        @keyframes playerGlow {
```

**Linha 509**: Define anima√ß√£o playerGlow

```css
            from { box-shadow: 0 0 15px #00aaff; }
```

**Linha 510**: In√≠cio: sombra azul normal

```css
            to { box-shadow: 0 0 30px #00aaff, 0 0 45px #00ffff; }
```

**Linha 511**: Fim: sombra azul dupla mais intensa

```css
        }
```

**Linha 512**: Fecha anima√ß√£o playerGlow

## SE√á√ÉO 18: CONTAINER DE DI√ÅLOGO (Linhas 514-540)

```css
        .dialogue-container {
```

**Linha 514**: Inicia classe do container de di√°logo

```css
            grid-area: dialogue;
```

**Linha 515**: Ocupa a √°rea "dialogue" do grid

```css
            background: linear-gradient(135deg, rgba(0,0,0,0.95), rgba(20,0,20,0.95));
```

**Linha 516**: Gradiente diagonal muito escuro

```css
            border: 4px solid;
```

**Linha 517**: Borda s√≥lida de 4px (cor definida dinamicamente)

```css
            border-radius: 20px;
```

**Linha 518**: Bordas arredondadas

```css
            padding: 2rem;
```

**Linha 519**: Padding interno 2rem

```css
            text-align: center;
```

**Linha 520**: Texto centralizado

```css
            backdrop-filter: blur(20px);
```

**Linha 521**: Efeito de desfoque intenso no fundo

```css
            animation: dialogueEntrance 0.8s ease-out;
```

**Linha 522**: Anima√ß√£o de entrada de 0.8s, suave

```css
        }
```

**Linha 523**: Fecha classe dialogue-container

```css
        @keyframes dialogueEntrance {
```

**Linha 525**: Define anima√ß√£o dialogueEntrance

```css
            from {
                opacity: 0;
                transform: scale(0.9);
            }
```

**Linha 526-529**: In√≠cio: invis√≠vel, 90% do tamanho

```css
            to {
                opacity: 1;
                transform: scale(1);
            }
```

**Linha 530-533**: Fim: vis√≠vel, tamanho normal

```css
        }
```

**Linha 534**: Fecha anima√ß√£o dialogueEntrance

```css
        .dialogue-text {
```

**Linha 536**: Inicia classe do texto de di√°logo

```css
            font-size: 1.3rem;
```

**Linha 537**: Tamanho da fonte 1.3rem

```css
            line-height: 1.6;
```

**Linha 538**: Altura da linha 1.6

```css
            margin-bottom: 2rem;
```

**Linha 539**: Margem inferior 2rem

```css
            min-height: 80px;
```

**Linha 540**: Altura m√≠nima 80px

```css
            display: flex;
```

**Linha 541**: Layout flexbox

```css
            align-items: center;
```

**Linha 542**: Centraliza verticalmente

```css
            justify-content: center;
```

**Linha 543**: Centraliza horizontalmente

```css
            font-weight: 600;
```

**Linha 544**: Peso semi-negrito

```css
        }
```

**Linha 545**: Fecha classe dialogue-text

## SE√á√ÉO 19: EFEITO DE DIGITA√á√ÉO (Linhas 547-555)

```css
        .typing-effect::after {
```

**Linha 547**: Pseudo-elemento after para efeito de digita√ß√£o

```css
            content: '|';
```

**Linha 548**: Conte√∫do: cursor de digita√ß√£o

```css
            animation: cursorBlink 1s infinite;
```

**Linha 549**: Anima√ß√£o de piscar de 1s, infinita

```css
            color: currentColor;
```

**Linha 550**: Cor igual ao texto pai

```css
        }
```

**Linha 551**: Fecha pseudo-elemento after

```css
        @keyframes cursorBlink {
```

**Linha 553**: Define anima√ß√£o cursorBlink

```css
            0%, 50% { opacity: 1; }
```

**Linha 554**: 0-50%: vis√≠vel

```css
            51%, 100% { opacity: 0; }
```

**Linha 555**: 51-100%: invis√≠vel

```css
        }
```

**Linha 556**: Fecha anima√ß√£o cursorBlink

## SE√á√ÉO 20: ARENA DE DESAFIO (Linhas 558-580)

```css
        .challenge-arena {
```

**Linha 558**: Inicia classe da arena de desafio

```css
            grid-area: challenge;
```

**Linha 559**: Ocupa a √°rea "challenge" do grid

```css
            background: linear-gradient(135deg, rgba(0,0,0,0.9), rgba(30,0,30,0.9));
```

**Linha 560**: Gradiente diagonal escuro com toque roxo

```css
            border: 4px solid #ffaa00;
```

**Linha 561**: Borda laranja s√≥lida

```css
            border-radius: 20px;
```

**Linha 562**: Bordas arredondadas

```css
            padding: 2rem;
```

**Linha 563**: Padding interno 2rem

```css
            backdrop-filter: blur(15px);
```

**Linha 564**: Efeito de desfoque no fundo

```css
            box-shadow: 0 0 40px rgba(255,170,0,0.4);
```

**Linha 565**: Sombra laranja

```css
            display: none;
```

**Linha 566**: Inicialmente oculta

```css
        }
```

**Linha 567**: Fecha classe challenge-arena

```css
        .challenge-title {
```

**Linha 569**: Inicia classe do t√≠tulo do desafio

```css
            font-size: 1.8rem;
```

**Linha 570**: Tamanho da fonte 1.8rem

```css
            color: #ffaa00;
```

**Linha 571**: Cor laranja

```css
            text-align: center;
```

**Linha 572**: Texto centralizado

```css
            margin-bottom: 1rem;
```

**Linha 573**: Margem inferior 1rem

```css
            font-family: 'Cinzel', serif;
```

**Linha 574**: Fonte Cinzel

```css
            font-weight: 900;
```

**Linha 575**: Peso ultra-negrito

```css
        }
```

**Linha 576**: Fecha classe challenge-title

## SE√á√ÉO 21: TIMER DO DESAFIO (Linhas 578-605)

```css
        .challenge-timer-container {
```

**Linha 578**: Inicia classe do container do timer

```css
            margin-bottom: 1.5rem;
```

**Linha 579**: Margem inferior 1.5rem

```css
        }
```

**Linha 580**: Fecha classe challenge-timer-container

```css
        .challenge-timer {
```

**Linha 582**: Inicia classe do timer do desafio

```css
            width: 100%;
```

**Linha 583**: Largura total

```css
            height: 20px;
```

**Linha 584**: Altura 20px

```css
            background: rgba(0,0,0,0.8);
```

**Linha 585**: Fundo preto semi-transparente

```css
            border: 2px solid #ff0000;
```

**Linha 586**: Borda vermelha

```css
            border-radius: 10px;
```

**Linha 587**: Bordas arredondadas

```css
            overflow: hidden;
```

**Linha 588**: Esconde overflow

```css
            position: relative;
```

**Linha 589**: Posicionamento relativo

```css
        }
```

**Linha 590**: Fecha classe challenge-timer

```css
        .timer-fill {
```

**Linha 592**: Inicia classe do preenchimento do timer

```css
            height: 100%;
```

**Linha 593**: Altura total do timer

```css
            background: linear-gradient(90deg, #00ff00, #ffff00, #ff6600, #ff0000);
```

**Linha 594**: Gradiente horizontal: verde ‚Üí amarelo ‚Üí laranja ‚Üí vermelho

```css
            transition: width 0.1s linear;
```

**Linha 595**: Transi√ß√£o r√°pida da largura (0.1s linear)

```css
            border-radius: 8px;
```

**Linha 596**: Bordas arredondadas

```css
        }
```

**Linha 597**: Fecha classe timer-fill

```css
        .timer-text {
```

**Linha 599**: Inicia classe do texto do timer

```css
            text-align: center;
```

**Linha 600**: Texto centralizado

```css
            font-size: 1.1rem;
```

**Linha 601**: Tamanho da fonte 1.1rem

```css
            color: #ff6666;
```

**Linha 602**: Cor vermelha clara

```css
            margin-top: 0.5rem;
```

**Linha 603**: Margem superior 0.5rem

```css
            font-weight: bold;
```

**Linha 604**: Texto em negrito

```css
        }
```

**Linha 605**: Fecha classe timer-text

## SE√á√ÉO 22: DESAFIO MATEM√ÅTICO (Linhas 607-650)

```css
        .math-challenge {
```

**Linha 607**: Inicia classe do desafio matem√°tico

```css
            display: flex;
```

**Linha 608**: Layout flexbox

```css
            flex-direction: column;
```

**Linha 609**: Dire√ß√£o vertical

```css
            gap: 1.5rem;
```

**Linha 610**: Espa√ßamento de 1.5rem entre elementos

```css
        }
```

**Linha 611**: Fecha classe math-challenge

```css
        .equation-display {
```

**Linha 613**: Inicia classe da exibi√ß√£o da equa√ß√£o

```css
            font-size: 2.5rem;
```

**Linha 614**: Tamanho da fonte grande (2.5rem)

```css
            text-align: center;
```

**Linha 615**: Texto centralizado

```css
            color: #00ffff;
```

**Linha 616**: Cor ciano

```css
            background: linear-gradient(135deg, rgba(0,255,255,0.1), rgba(0,200,255,0.2));
```

**Linha 617**: Gradiente diagonal ciano semi-transparente

```css
            padding: 2rem;
```

**Linha 618**: Padding interno 2rem

```css
            border-radius: 15px;
```

**Linha 619**: Bordas arredondadas

```css
            border: 2px solid #00ffff;
```

**Linha 620**: Borda ciano

```css
            font-family: 'Orbitron', monospace;
```

**Linha 621**: Fonte Orbitron (monospace)

```css
            font-weight: bold;
```

**Linha 622**: Texto em negrito

```css
        }
```

**Linha 623**: Fecha classe equation-display

```css
        .answer-section {
```

**Linha 625**: Inicia classe da se√ß√£o de resposta

```css
            display: flex;
```

**Linha 626**: Layout flexbox

```css
            flex-direction: column;
```

**Linha 627**: Dire√ß√£o vertical

```css
            gap: 1rem;
```

**Linha 628**: Espa√ßamento de 1rem entre elementos

```css
        }
```

**Linha 629**: Fecha classe answer-section

```css
        .answer-display {
```

**Linha 631**: Inicia classe da exibi√ß√£o da resposta

```css
            font-size: 2rem;
```

**Linha 632**: Tamanho da fonte 2rem

```css
            text-align: center;
```

**Linha 633**: Texto centralizado

```css
            background: linear-gradient(135deg, #000, #111);
```

**Linha 634**: Gradiente diagonal escuro

```css
            color: #00ff00;
```

**Linha 635**: Cor verde

```css
            padding: 1rem;
```

**Linha 636**: Padding interno 1rem

```css
            border: 2px solid #00ff00;
```

**Linha 637**: Borda verde

```css
            border-radius: 10px;
```

**Linha 638**: Bordas arredondadas

```css
            font-family: 'Orbitron', monospace;
```

**Linha 639**: Fonte Orbitron

```css
            font-weight: bold;
```

**Linha 640**: Texto em negrito

```css
        }
```

**Linha 641**: Fecha classe answer-display

```css
        .number-grid {
```

**Linha 643**: Inicia classe da grade de n√∫meros

```css
            display: grid;
```

**Linha 644**: Layout CSS Grid

```css
            grid-template-columns: repeat(4, 1fr);
```

**Linha 645**: 4 colunas de tamanho igual

```css
            gap: 0.5rem;
```

**Linha 646**: Espa√ßamento de 0.5rem entre bot√µes

```css
        }
```

**Linha 647**: Fecha classe number-grid

```css
        .number-btn {
```

**Linha 649**: Inicia classe dos bot√µes num√©ricos

```css
            padding: 1rem;
```

**Linha 650**: Padding interno 1rem

```css
            font-size: 1.2rem;
```

**Linha 651**: Tamanho da fonte 1.2rem

```css
            font-weight: bold;
```

**Linha 652**: Texto em negrito

```css
            background: linear-gradient(45deg, #333, #555);
```

**Linha 653**: Gradiente diagonal cinza

```css
            border: 2px solid #777;
```

**Linha 654**: Borda cinza

```css
            border-radius: 10px;
```

**Linha 655**: Bordas arredondadas

```css
            color: white;
```

**Linha 656**: Texto branco

```css
            cursor: pointer;
```

**Linha 657**: Cursor de ponteiro

```css
            transition: all 0.3s ease;
```

**Linha 658**: Transi√ß√£o suave de 0.3s

```css
            font-family: inherit;
```

**Linha 659**: Herda a fonte

```css
        }
```

**Linha 660**: Fecha classe number-btn

```css
        .number-btn:hover {
```

**Linha 662**: Estado hover dos bot√µes num√©ricos

```css
            background: linear-gradient(45deg, #555, #777);
```

**Linha 663**: Gradiente mais claro no hover

```css
            transform: scale(1.05);
```

**Linha 664**: Aumenta 5%

```css
            border-color: #fff;
```

**Linha 665**: Borda fica branca

```css
        }
```

**Linha 666**: Fecha hover dos bot√µes num√©ricos

## SE√á√ÉO 23: M√öLTIPLA ESCOLHA (Linhas 668-720)

```css
        .multiple-choice {
```

**Linha 668**: Inicia classe da m√∫ltipla escolha

```css
            text-align: center;
```

**Linha 669**: Texto centralizado

```css
        }
```

**Linha 670**: Fecha classe multiple-choice

```css
        .question-text {
```

**Linha 672**: Inicia classe do texto da pergunta

```css
            font-size: 1.5rem;
```

**Linha 673**: Tamanho da fonte 1.5rem

```css
            margin-bottom: 2rem;
```

**Linha 674**: Margem inferior 2rem

```css
            color: #ffff00;
```

**Linha 675**: Cor amarela

```css
            line-height: 1.4;
```

**Linha 676**: Altura da linha 1.4

```css
            font-weight: 600;
```

**Linha 677**: Peso semi-negrito

```css
        }
```

**Linha 678**: Fecha classe question-text

```css
        .options-grid {
```

**Linha 680**: Inicia classe da grade de op√ß√µes

```css
            display: grid;
```

**Linha 681**: Layout CSS Grid

```css
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
```

**Linha 682**: Colunas responsivas: m√≠nimo 200px, ajuste autom√°tico

```css
            gap: 1rem;
```

**Linha 683**: Espa√ßamento de 1rem entre op√ß√µes

```css
        }
```

**Linha 684**: Fecha classe options-grid

```css
        .option-btn {
```

**Linha 686**: Inicia classe dos bot√µes de op√ß√£o

```css
            padding: 1.5rem;
```

**Linha 687**: Padding interno 1.5rem

```css
            font-size: 1.1rem;
```

**Linha 688**: Tamanho da fonte 1.1rem

```css
            background: linear-gradient(45deg, #660066, #990099);
```

**Linha 689**: Gradiente diagonal roxo

```css
            border: 3px solid #ff00ff;
```

**Linha 690**: Borda magenta

```css
            border-radius: 15px;
```

**Linha 691**: Bordas arredondadas

```css
            color: white;
```

**Linha 692**: Texto branco

```css
            cursor: pointer;
```

**Linha 693**: Cursor de ponteiro

```css
            transition: all 0.4s ease;
```

**Linha 694**: Transi√ß√£o suave de 0.4s

```css
            font-family: inherit;
```

**Linha 695**: Herda a fonte

```css
            font-weight: bold;
```

**Linha 696**: Texto em negrito

```css
            position: relative;
```

**Linha 697**: Posicionamento relativo

```css
            overflow: hidden;
```

**Linha 698**: Esconde overflow

```css
        }
```

**Linha 699**: Fecha classe option-btn

```css
        .option-btn::before {
```

**Linha 701**: Pseudo-elemento before dos bot√µes de op√ß√£o

```css
            content: '';
```

**Linha 702**: Conte√∫do vazio

```css
            position: absolute;
```

**Linha 703**: Posicionamento absoluto

```css
            top: 0;
```

**Linha 704**: Alinhado ao topo

```css
            left: -100%;
```

**Linha 705**: Inicialmente fora da tela √† esquerda

```css
            width: 100%;
```

**Linha 706**: Largura total

```css
            height: 100%;
```

**Linha 707**: Altura total

```css
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
```

**Linha 708**: Gradiente de brilho horizontal

```css
            transition: left 0.5s;
```

**Linha 709**: Transi√ß√£o da propriedade left

```css
        }
```

**Linha 710**: Fecha pseudo-elemento before

```css
        .option-btn:hover::before {
```

**Linha 712**: Pseudo-elemento before no hover

```css
            left: 100%;
```

**Linha 713**: Move para fora da tela √† direita

```css
        }
```

**Linha 714**: Fecha hover do pseudo-elemento

```css
        .option-btn:hover {
```

**Linha 716**: Estado hover dos bot√µes de op√ß√£o

```css
            background: linear-gradient(45deg, #990099, #cc00cc);
```

**Linha 717**: Gradiente mais claro no hover

```css
            transform: scale(1.05);
```

**Linha 718**: Aumenta 5%

```css
        }
```

**Linha 719**: Fecha hover dos bot√µes de op√ß√£o

## SE√á√ÉO 24: ESTADOS DAS OP√á√ïES (Linhas 721-745)

```css
        .option-btn.correct {
```

**Linha 721**: Bot√£o de op√ß√£o correta

```css
            background: linear-gradient(45deg, #006600, #00aa00);
```

**Linha 722**: Gradiente verde

```css
            border-color: #00ff00;
```

**Linha 723**: Borda verde

```css
            animation: correctAnswer 1s ease;
```

**Linha 724**: Anima√ß√£o de resposta correta

```css
        }
```

**Linha 725**: Fecha classe correct

```css
        .option-btn.incorrect {
```

**Linha 727**: Bot√£o de op√ß√£o incorreta

```css
            background: linear-gradient(45deg, #660000, #aa0000);
```

**Linha 728**: Gradiente vermelho

```css
            border-color: #ff0000;
```

**Linha 729**: Borda vermelha

```css
            animation: incorrectAnswer 0.8s ease;
```

**Linha 730**: Anima√ß√£o de resposta incorreta

```css
        }
```

**Linha 731**: Fecha classe incorrect

```css
        @keyframes correctAnswer {
```

**Linha 733**: Define anima√ß√£o correctAnswer

```css
            0%, 100% { transform: scale(1); }
```

**Linha 734**: In√≠cio e fim: tamanho normal

```css
            50% { transform: scale(1.1); }
```

**Linha 735**: Meio: aumenta 10%

```css
        }
```

**Linha 736**: Fecha anima√ß√£o correctAnswer

```css
        @keyframes incorrectAnswer {
```

**Linha 738**: Define anima√ß√£o incorrectAnswer

```css
            0%, 100% { transform: translateX(0); }
```

**Linha 739**: In√≠cio e fim: posi√ß√£o normal

```css
            25% { transform: translateX(-10px); }
```

**Linha 740**: 25%: move 10px √† esquerda

```css
            75% { transform: translateX(10px); }
```

**Linha 741**: 75%: move 10px √† direita (efeito de tremor)

```css
        }
```

**Linha 742**: Fecha anima√ß√£o incorrectAnswer

## SE√á√ÉO 25: EFEITOS DE DANO (Linhas 744-785)

```css
        .damage-effect {
```

**Linha 744**: Inicia classe do efeito de dano

```css
            position: fixed;
```

**Linha 745**: Posi√ß√£o fixa na tela

```css
            font-size: 3rem;
```

**Linha 746**: Tamanho da fonte grande

```css
            font-weight: 900;
```

**Linha 747**: Peso ultra-negrito

```css
            pointer-events: none;
```

**Linha 748**: N√£o interfere com cliques

```css
            animation: damageAnimation 2s ease-out forwards;
```

**Linha 749**: Anima√ß√£o de dano de 2s, suave, para frente

```css
            z-index: 1000;
```

**Linha 750**: Camada alta (por cima de tudo)

```css
            font-family: 'Cinzel', serif;
```

**Linha 751**: Fonte Cinzel

```css
        }
```

**Linha 752**: Fecha classe damage-effect

```css
        .damage-player {
```

**Linha 754**: Dano no jogador

```css
            color: #ff0000;
```

**Linha 755**: Cor vermelha

```css
            text-shadow: 0 0 20px #ff0000;
```

**Linha 756**: Sombra vermelha brilhante

```css
        }
```

**Linha 757**: Fecha classe damage-player

```css
        .damage-boss {
```

**Linha 759**: Dano no boss

```css
            color: #00ff00;
```

**Linha 760**: Cor verde

```css
            text-shadow: 0 0 20px #00ff00;
```

**Linha 761**: Sombra verde brilhante

```css
        }
```

**Linha 762**: Fecha classe damage-boss

```css
        .damage-critical {
```

**Linha 764**: Dano cr√≠tico

```css
            color: #ffff00;
```

**Linha 765**: Cor amarela

```css
            text-shadow: 0 0 30px #ffff00;
```

**Linha 766**: Sombra amarela mais intensa

```css
            font-size: 4rem !important;
```

**Linha 767**: Tamanho maior (4rem) com !important

```css
        }
```

**Linha 768**: Fecha classe damage-critical

```css
        @keyframes damageAnimation {
```

**Linha 770**: Define anima√ß√£o damageAnimation

```css
            0% {
                transform: translateY(0) scale(1);
                opacity: 1;
            }
```

**Linha 771-774**: In√≠cio: posi√ß√£o normal, tamanho normal, vis√≠vel

```css
            100% {
                transform: translateY(-100px) scale(1.5);
                opacity: 0;
            }
```

**Linha 775-778**: Fim: sobe 100px, aumenta 50%, invis√≠vel

```css
        }
```

**Linha 779**: Fecha anima√ß√£o damageAnimation

## SE√á√ÉO 26: INTERFACE DO JOGO (Linhas 781-815)

```css
        .game-ui {
```

**Linha 781**: Inicia classe da interface do jogo

```css
            position: fixed;
```

**Linha 782**: Posi√ß√£o fixa na tela

```css
            top: 1rem;
```

**Linha 783**: 1rem do topo

```css
            left: 1rem;
```

**Linha 784**: 1rem da esquerda

```css
            background: linear-gradient(135deg, rgba(0,0,0,0.9), rgba(30,0,30,0.9));
```

**Linha 785**: Gradiente diagonal escuro

```css
            padding: 1rem;
```

**Linha 786**: Padding interno 1rem

```css
            border: 2px solid #ffaa00;
```

**Linha 787**: Borda laranja

```css
            border-radius: 15px;
```

**Linha 788**: Bordas arredondadas

```css
            z-index: 1000;
```

**Linha 789**: Camada alta

```css
            backdrop-filter: blur(10px);
```

**Linha 790**: Efeito de desfoque no fundo

```css
            box-shadow: 0 0 20px rgba(255,170,0,0.3);
```

**Linha 791**: Sombra laranja

```css
        }
```

**Linha 792**: Fecha classe game-ui

```css
        .ui-stat {
```

**Linha 794**: Inicia classe das estat√≠sticas da UI

```css
            display: flex;
```

**Linha 795**: Layout flexbox

```css
            justify-content: space-between;
```

**Linha 796**: Espa√ßa elementos nas extremidades

```css
            margin-bottom: 0.5rem;
```

**Linha 797**: Margem inferior 0.5rem

```css
            font-size: 0.9rem;
```

**Linha 798**: Tamanho da fonte pequeno

```css
            color: #ffaa00;
```

**Linha 799**: Cor laranja

```css
            font-weight: bold;
```

**Linha 800**: Texto em negrito

```css
            min-width: 200px;
```

**Linha 801**: Largura m√≠nima 200px

```css
        }
```

**Linha 802**: Fecha classe ui-stat

```css
        .ui-stat-value {
```

**Linha 804**: Inicia classe do valor da estat√≠stica

```css
            color: #fff;
```

**Linha 805**: Cor branca

```css
        }
```

**Linha 806**: Fecha classe ui-stat-value

## SE√á√ÉO 27: CONTADOR DE COMBO (Linhas 808-825)

```css
        .combo-counter {
```

**Linha 808**: Inicia classe do contador de combo

```css
            position: fixed;
```

**Linha 809**: Posi√ß√£o fixa na tela

```css
            top: 1rem;
```

**Linha 810**: 1rem do topo

```css
            right: 1rem;
```

**Linha 811**: 1rem da direita

```css
            background: linear-gradient(45deg, #ff0080, #8000ff);
```

**Linha 812**: Gradiente diagonal rosa-roxo

```css
            padding: 1rem 1.5rem;
```

**Linha 813**: Padding interno assim√©trico

```css
            border-radius: 15px;
```

**Linha 814**: Bordas arredondadas

```css
            font-size: 1.2rem;
```

**Linha 815**: Tamanho da fonte 1.2rem

```css
            font-weight: bold;
```

**Linha 816**: Texto em negrito

```css
            color: #fff;
```

**Linha 817**: Cor branca

```css
            box-shadow: 0 0 20px rgba(255,0,128,0.4);
```

**Linha 818**: Sombra rosa

```css
            z-index: 1000;
```

**Linha 819**: Camada alta

```css
            animation: comboPulse 1s ease-in-out infinite;
```

**Linha 820**: Anima√ß√£o de pulsa√ß√£o de 1s, suave, infinita

```css
        }
```

**Linha 821**: Fecha classe combo-counter

```css
        @keyframes comboPulse {
```

**Linha 823**: Define anima√ß√£o comboPulse

```css
            0%, 100% { transform: scale(1); }
```

**Linha 824**: In√≠cio e fim: tamanho normal

```css
            50% { transform: scale(1.05); }
```

**Linha 825**: Meio: aumenta 5%

```css
        }
```

**Linha 826**: Fecha anima√ß√£o comboPulse

## SE√á√ÉO 28: BOT√ÉO VOLTAR (Linhas 828-845)

```css
        .back-btn {
```

**Linha 828**: Inicia classe do bot√£o voltar

```css
            position: fixed;
```

**Linha 829**: Posi√ß√£o fixa na tela

```css
            bottom: 1rem;
```

**Linha 830**: 1rem da base

```css
            left: 1rem;
```

**Linha 831**: 1rem da esquerda

```css
            padding: 0.8rem 1.5rem;
```

**Linha 832**: Padding interno

```css
            background: linear-gradient(45deg, #ff0000, #cc0000);
```

**Linha 833**: Gradiente diagonal vermelho

```css
            border: 2px solid #ff0000;
```

**Linha 834**: Borda vermelha

```css
            border-radius: 10px;
```

**Linha 835**: Bordas arredondadas

```css
            color: white;
```

**Linha 836**: Texto branco

```css
            cursor: pointer;
```

**Linha 837**: Cursor de ponteiro

```css
            font-family: inherit;
```

**Linha 838**: Herda a fonte

```css
            font-weight: bold;
```

**Linha 839**: Texto em negrito

```css
            font-size: 1rem;
```

**Linha 840**: Tamanho da fonte 1rem

```css
            transition: all 0.3s ease;
```

**Linha 841**: Transi√ß√£o suave de 0.3s

```css
            z-index: 1000;
```

**Linha 842**: Camada alta

```css
        }
```

**Linha 843**: Fecha classe back-btn

```css
        .back-btn:hover {
```

**Linha 845**: Estado hover do bot√£o voltar

```css
            background: linear-gradient(45deg, #cc0000, #990000);
```

**Linha 846**: Gradiente mais escuro no hover

```css
            transform: scale(1.05);
```

**Linha 847**: Aumenta 5%

```css
        }
```

**Linha 848**: Fecha hover do bot√£o voltar

## SE√á√ÉO 29: TELA DE RESULTADO (Linhas 850-890)

```css
        .result-screen {
```

**Linha 850**: Inicia classe da tela de resultado

```css
            position: fixed;
```

**Linha 851**: Posi√ß√£o fixa na tela

```css
            top: 0;
```

**Linha 852**: Alinhado ao topo

```css
            left: 0;
```

**Linha 853**: Alinhado √† esquerda

```css
            width: 100%;
```

**Linha 854**: Largura total

```css
            height: 100%;
```

**Linha 855**: Altura total

```css
            background: linear-gradient(135deg, rgba(0,0,0,0.95), rgba(20,0,20,0.95));
```

**Linha 856**: Gradiente diagonal muito escuro

```css
            display: none;
```

**Linha 857**: Inicialmente oculta

```css
            justify-content: center;
```

**Linha 858**: Centraliza horizontalmente

```css
            align-items: center;
```

**Linha 859**: Centraliza verticalmente

```css
            flex-direction: column;
```

**Linha 860**: Dire√ß√£o vertical

```css
            z-index: 2000;
```

**Linha 861**: Camada muito alta

```css
            backdrop-filter: blur(20px);
```

**Linha 862**: Efeito de desfoque intenso no fundo

```css
        }
```

**Linha 863**: Fecha classe result-screen

```css
        .result-content {
```

**Linha 865**: Inicia classe do conte√∫do do resultado

```css
            text-align: center;
```

**Linha 866**: Texto centralizado

```css
            background: linear-gradient(135deg, rgba(0,0,0,0.9), rgba(30,0,30,0.9));
```

**Linha 867**: Gradiente diagonal escuro

```css
            padding: 3rem;
```

**Linha 868**: Padding interno grande

```css
            border-radius: 30px;
```

**Linha 869**: Bordas muito arredondadas

```css
            border: 4px solid;
```

**Linha 870**: Borda s√≥lida de 4px (cor definida dinamicamente)

```css
            backdrop-filter: blur(15px);
```

**Linha 871**: Efeito de desfoque no fundo

```css
            max-width: 600px;
```

**Linha 872**: Largura m√°xima 600px

```css
            width: 90%;
```

**Linha 873**: Largura 90% da tela

```css
        }
```

**Linha 874**: Fecha classe result-content

```css
        .result-title {
```

**Linha 876**: Inicia classe do t√≠tulo do resultado

```css
            font-family: 'Cinzel', serif;
```

**Linha 877**: Fonte Cinzel

```css
            font-size: 3rem;
```

**Linha 878**: Tamanho da fonte grande

```css
            font-weight: 900;
```

**Linha 879**: Peso ultra-negrito

```css
            margin-bottom: 2rem;
```

**Linha 880**: Margem inferior 2rem

```css
            animation: resultGlow 2s ease-in-out infinite alternate;
```

**Linha 881**: Anima√ß√£o de brilho de 2s, suave, infinita, alternada

```css
        }
```

**Linha 882**: Fecha classe result-title

```css
        .victory-title {
```

**Linha 884**: T√≠tulo de vit√≥ria

```css
            color: #00ff00;
```

**Linha 885**: Cor verde

```css
            border-color: #00ff00;
```

**Linha 886**: Borda verde

```css
        }
```

**Linha 887**: Fecha classe victory-title

```css
        .defeat-title {
```

**Linha 889**: T√≠tulo de derrota

```css
            color: #ff0000;
```

**Linha 890**: Cor vermelha

```css
            border-color: #ff0000;
```

**Linha 891**: Borda vermelha

```css
        }
```

**Linha 892**: Fecha classe defeat-title

```css
        @keyframes resultGlow {
```

**Linha 894**: Define anima√ß√£o resultGlow

```css
            from { text-shadow: 0 0 20px currentColor; }
```

**Linha 895**: In√≠cio: sombra normal

```css
            to { text-shadow: 0 0 40px currentColor; }
```

**Linha 896**: Fim: sombra mais intensa

```css
        }
```

**Linha 897**: Fecha anima√ß√£o resultGlow

## SE√á√ÉO 30: MENSAGEM E ESTAT√çSTICAS DO RESULTADO (Linhas 899-935)

```css
        .result-message {
```

**Linha 899**: Inicia classe da mensagem do resultado

```css
            font-size: 1.3rem;
```

**Linha 900**: Tamanho da fonte 1.3rem

```css
            margin-bottom: 2rem;
```

**Linha 901**: Margem inferior 2rem

```css
            line-height: 1.5;
```

**Linha 902**: Altura da linha 1.5

```css
            color: #ccc;
```

**Linha 903**: Cor cinza claro

```css
        }
```

**Linha 904**: Fecha classe result-message

```css
        .result-stats {
```

**Linha 906**: Inicia classe das estat√≠sticas do resultado

```css
            display: grid;
```

**Linha 907**: Layout CSS Grid

```css
            grid-template-columns: repeat(3, 1fr);
```

**Linha 908**: 3 colunas de tamanho igual

```css
            gap: 1rem;
```

**Linha 909**: Espa√ßamento de 1rem entre itens

```css
            margin-bottom: 2rem;
```

**Linha 910**: Margem inferior 2rem

```css
        }
```

**Linha 911**: Fecha classe result-stats

```css
        .result-stat {
```

**Linha 913**: Inicia classe do item de estat√≠stica do resultado

```css
            background: rgba(255,255,255,0.1);
```

**Linha 914**: Fundo branco semi-transparente

```css
            padding: 1rem;
```

**Linha 915**: Padding interno 1rem

```css
            border-radius: 10px;
```

**Linha 916**: Bordas arredondadas

```css
            backdrop-filter: blur(5px);
```

**Linha 917**: Efeito de desfoque no fundo

```css
        }
```

**Linha 918**: Fecha classe result-stat

```css
        .result-stat-value {
```

**Linha 920**: Inicia classe do valor da estat√≠stica do resultado

```css
            font-size: 2rem;
```

**Linha 921**: Tamanho da fonte grande

```css
            font-weight: bold;
```

**Linha 922**: Texto em negrito

```css
            color: #ffaa00;
```

**Linha 923**: Cor laranja

```css
            display: block;
```

**Linha 924**: Exibi√ß√£o em bloco

```css
            margin-bottom: 0.5rem;
```

**Linha 925**: Margem inferior 0.5rem

```css
        }
```

**Linha 926**: Fecha classe result-stat-value

```css
        .result-stat-label {
```

**Linha 928**: Inicia classe do r√≥tulo da estat√≠stica do resultado

```css
            font-size: 0.9rem;
```

**Linha 929**: Tamanho da fonte pequeno

```css
            color: #aaa;
```

**Linha 930**: Cor cinza

```css
        }
```

**Linha 931**: Fecha classe result-stat-label

## SE√á√ÉO 31: RESPONSIVIDADE (Linhas 933-970)

```css
        @media (max-width: 768px) {
```

**Linha 933**: Media query para telas menores que 768px

```css
            .battle-layout {
                grid-template-areas:
                    "boss"
                    "dialogue"
                    "player"
                    "challenge";
                grid-template-columns: 1fr;
                grid-template-rows: auto auto auto 1fr;
            }
```

**Linha 934-941**: Layout de batalha em coluna √∫nica para mobile

```css
            .professor-grid {
                grid-template-columns: 1fr;
                padding: 1rem;
            }
```

**Linha 943-946**: Grade de professores em coluna √∫nica para mobile

```css
            .game-title::before,
            .game-title::after {
                display: none;
            }
```

**Linha 948-951**: Esconde estrelas do t√≠tulo em mobile

```css
            .options-grid {
                grid-template-columns: 1fr;
            }
```

**Linha 953-955**: Grade de op√ß√µes em coluna √∫nica para mobile

```css
            .number-grid {
                grid-template-columns: repeat(3, 1fr);
            }
```

**Linha 957-959**: Grade de n√∫meros com 3 colunas para mobile

```css
            .result-stats {
                grid-template-columns: 1fr;
            }
```

**Linha 961-963**: Estat√≠sticas do resultado em coluna √∫nica para mobile

```css
        }
```

**Linha 964**: Fecha media query

## SE√á√ÉO 32: CLASSES UTILIT√ÅRIAS (Linhas 966-970)

```css
        .hidden { display: none !important; }
```

**Linha 966**: Classe para esconder elementos com !important

```css
        .show { display: block !important; }
```

**Linha 967**: Classe para mostrar elementos em bloco com !important

```css
        .show-flex { display: flex !important; }
```

**Linha 968**: Classe para mostrar elementos em flex com !important

```css
    </style>
```

**Linha 969**: Fecha a se√ß√£o de estilos CSS

```css
</head>
```

**Linha 970**: Fecha a se√ß√£o head do HTML

## SE√á√ÉO 33: IN√çCIO DO BODY E ESTRUTURA HTML (Linhas 971-1000)

```html
<body>
```

**Linha 971**: Inicia o elemento body

```html
    <div class="game-container">
```

**Linha 972**: Container principal do jogo

```html
        <div class="particle-system" id="particleSystem"></div>
```

**Linha 973**: Sistema de part√≠culas com ID para manipula√ß√£o JavaScript

```html
        <div id="mainMenu" class="main-menu">
```

**Linha 975**: Menu principal com ID

```html
            <h1 class="game-title">ACADEMIA DOS MESTRES SUPREMOS</h1>
```

**Linha 976**: T√≠tulo principal do jogo

```html
            <p class="subtitle">EDI√á√ÉO DEFINITIVA - CONFRONTO √âPICO</p>
```

**Linha 977**: Subt√≠tulo do jogo

```html
            <div class="menu-buttons">
```

**Linha 978**: Container dos bot√µes do menu

```html
                <button class="menu-btn" onclick="showProfessorSelect()">‚öîÔ∏è ENTRAR NA ARENA SUPREMA</button>
```

**Linha 979**: Bot√£o para entrar na sele√ß√£o de professores

```html
                <button class="menu-btn" onclick="showInstructions()">üìú MANUAL DO GUERREIRO</button>
```

**Linha 980**: Bot√£o para mostrar instru√ß√µes

```html
                <button class="menu-btn" onclick="showHallOfFame()">üèÜ HALL DA FAMA √âPICO</button>
```

**Linha 981**: Bot√£o para mostrar hall da fama

```html
                <button class="menu-btn" onclick="resetAllProgress()">üíÄ RESETAR UNIVERSO</button>
```

**Linha 982**: Bot√£o para resetar progresso

```html
            </div>
```

**Linha 983**: Fecha container dos bot√µes

```html
        </div>
```

**Linha 984**: Fecha menu principal

```html
        <div id="professorSelect" class="professor-select">
```

**Linha 986**: Tela de sele√ß√£o de professores

```html
            <button class="back-btn" onclick="showMainMenu()">‚Üê FUGIR DA ACADEMIA</button>
```

**Linha 987**: Bot√£o para voltar ao menu principal

```html
            <div class="game-ui">
```

**Linha 989**: Interface do jogo (estat√≠sticas)

```html
                <div class="ui-stat">
                    <span>üéì N√≠vel:</span>
                    <span class="ui-stat-value" id="playerLevel">1</span>
                </div>
```

**Linha 990-993**: Estat√≠stica do n√≠vel do jogador

```html
                <div class="ui-stat">
                    <span>‚ö° Poder:</span>
                    <span class="ui-stat-value" id="playerPower">100</span>
                </div>
```

**Linha 994-997**: Estat√≠stica do poder do jogador

```html
                <div class="ui-stat">
                    <span>üèÜ Vit√≥rias:</span>
                    <span class="ui-stat-value" id="victories">0/15</span>
                </div>
```

**Linha 998-1001**: Estat√≠stica das vit√≥rias

```html
                <div class="ui-stat">
                    <span>üíÄ Derrotas:</span>
                    <span class="ui-stat-value" id="defeats">0</span>
                </div>
```

**Linha 1002-1005**: Estat√≠stica das derrotas

```html
                <div class="ui-stat">
                    <span>üî• Combo Max:</span>
                    <span class="ui-stat-value" id="maxCombo">0</span>
                </div>
```

**Linha 1006-1009**: Estat√≠stica do combo m√°ximo

```html
            </div>
```

**Linha 1010**: Fecha interface do jogo
## SE√á√ÉO 34: T√çTULO E GRADE DE PROFESSORES (Linhas 1012-1025)

```html
            <div style="text-align: center; margin: 2rem 0;">
```

**Linha 1012**: Container centralizado com margem vertical

```html
                <h2 style="font-size: 3rem; color: #ff0080; margin-bottom: 1rem; font-family: 'Cinzel', serif;">
                    ESCOLHA SEU DESTINO
                </h2>
```

**Linha 1013-1015**: T√≠tulo da sele√ß√£o com estilo inline (fonte grande, cor rosa, fonte Cinzel)

```html
                <p style="font-size: 1.2rem; color: #ccc; margin-bottom: 2rem;">
                    Cada professor √© um mestre supremo em sua arte. Prepare-se para o confronto definitivo!
                </p>
```

**Linha 1016-1018**: Descri√ß√£o explicativa com estilo inline

```html
            </div>
```

**Linha 1019**: Fecha container do t√≠tulo

```html
            <div class="professor-grid" id="professorGrid">
            </div>
```

**Linha 1021-1022**: Grade de professores (preenchida dinamicamente via JavaScript)

```html
        </div>
```

**Linha 1023**: Fecha tela de sele√ß√£o de professores

## SE√á√ÉO 35: ARENA DE BATALHA (Linhas 1025-1040)

```html
        <div id="battleArena" class="battle-arena">
```

**Linha 1025**: Container da arena de batalha

```html
            <button class="back-btn" onclick="fleeBattle()">üí® FUGIR</button>
```

**Linha 1026**: Bot√£o para fugir da batalha

```html
            <div class="combo-counter" id="comboCounter" style="display: none;">
                COMBO: <span id="comboValue">0</span>x
            </div>
```

**Linha 1027-1029**: Contador de combo (inicialmente oculto)

```html
            <div class="battle-layout">
```

**Linha 1031**: Layout da batalha usando CSS Grid

```html
                <div class="professor-boss" id="professorBoss">
```

**Linha 1032**: Container do professor boss

```html
                    <div class="boss-avatar" id="bossAvatar">üë®‚Äçüè´</div>
```

**Linha 1033**: Avatar do boss (emoji padr√£o de professor)

```html
                    <div class="boss-name" id="bossName">MESTRE SUPREMO</div>
```

**Linha 1034**: Nome do boss (atualizado dinamicamente)

```html
                    <div class="boss-subject" id="bossSubject">CONHECIMENTO ABSOLUTO</div>
```

**Linha 1035**: Mat√©ria do boss (atualizada dinamicamente)

```html
                    <div class="hp-container">
```

**Linha 1036**: Container da barra de HP

```html
                        <div class="hp-bar">
```

**Linha 1037**: Barra de HP

```html
                            <div class="hp-fill" id="bossHPFill" style="width: 100%;"></div>
```

**Linha 1038**: Preenchimento da barra de HP (100% inicial)

```html
                            <div class="hp-text" id="bossHPText">1000/1000</div>
```

**Linha 1039**: Texto mostrando HP atual/m√°ximo

```html
                        </div>
```

**Linha 1040**: Fecha barra de HP

```html
                    </div>
```

**Linha 1041**: Fecha container de HP

```html
                </div>
```

**Linha 1042**: Fecha container do boss

## SE√á√ÉO 36: DI√ÅLOGO E √ÅREA DO JOGADOR (Linhas 1044-1070)

```html
                <div class="dialogue-container" id="dialogueContainer">
```

**Linha 1044**: Container do di√°logo

```html
                    <div class="dialogue-text" id="dialogueText">
                        Prepare-se para enfrentar o conhecimento supremo...
                    </div>
```

**Linha 1045-1047**: Texto do di√°logo (atualizado dinamicamente)

```html
                    <button class="menu-btn" onclick="startChallenge()" id="startChallengeBtn">‚öîÔ∏è ACEITAR O DESTINO</button>
```

**Linha 1048**: Bot√£o para iniciar o desafio

```html
                </div>
```

**Linha 1049**: Fecha container do di√°logo

```html
                <div class="player-area">
```

**Linha 1051**: √Årea do jogador

```html
                    <div class="player-avatar">üéì</div>
```

**Linha 1052**: Avatar do jogador (emoji de formatura)

```html
                    <div style="font-size: 1.3rem; font-weight: bold; margin-bottom: 1rem; color: #00ffff;">ESTUDANTE SUPREMO</div>
```

**Linha 1053**: T√≠tulo do jogador com estilo inline

```html
                    <div class="hp-container">
```

**Linha 1054**: Container da barra de HP do jogador

```html
                        <div class="hp-bar">
```

**Linha 1055**: Barra de HP do jogador

```html
                            <div class="hp-fill" id="playerHPFill" style="width: 100%;"></div>
```

**Linha 1056**: Preenchimento da barra de HP do jogador

```html
                            <div class="hp-text" id="playerHPText">500/500</div>
```

**Linha 1057**: Texto do HP do jogador

```html
                        </div>
```

**Linha 1058**: Fecha barra de HP

```html
                    </div>
```

**Linha 1059**: Fecha container de HP

```html
                    <div style="color: #ffff00; font-weight: bold; margin-top: 1rem;" id="playerLevelDisplay">N√çVEL 1</div>
```

**Linha 1060**: Display do n√≠vel do jogador

```html
                </div>
```

**Linha 1061**: Fecha √°rea do jogador

## SE√á√ÉO 37: ARENA DE DESAFIO (Linhas 1063-1080)

```html
                <div class="challenge-arena" id="challengeArena">
```

**Linha 1063**: Arena onde aparecem os desafios

```html
                    <div class="challenge-title" id="challengeTitle">DESAFIO SUPREMO</div>
```

**Linha 1064**: T√≠tulo do desafio

```html
                    <div class="challenge-timer-container">
```

**Linha 1065**: Container do timer

```html
                        <div class="challenge-timer">
```

**Linha 1066**: Timer visual

```html
                            <div class="timer-fill" id="timerFill" style="width: 100%;"></div>
```

**Linha 1067**: Preenchimento do timer

```html
                        </div>
```

**Linha 1068**: Fecha timer

```html
                        <div class="timer-text" id="timerText">Tempo: 30s</div>
```

**Linha 1069**: Texto do tempo restante

```html
                    </div>
```

**Linha 1070**: Fecha container do timer

```html
                    <div id="challengeContent">
                    </div>
```

**Linha 1071-1072**: Container do conte√∫do do desafio (preenchido dinamicamente)

```html
                </div>
```

**Linha 1073**: Fecha arena de desafio

```html
            </div>
```

**Linha 1074**: Fecha layout da batalha

```html
        </div>
```

**Linha 1075**: Fecha arena de batalha

## SE√á√ÉO 38: TELA DE RESULTADO (Linhas 1077-1100)

```html
        <div class="result-screen" id="resultScreen">
```

**Linha 1077**: Tela de resultado (overlay)

```html
            <div class="result-content" id="resultContent">
```

**Linha 1078**: Conte√∫do da tela de resultado

```html
                <div class="result-title" id="resultTitle">VIT√ìRIA √âPICA!</div>
```

**Linha 1079**: T√≠tulo do resultado

```html
                <div class="result-message" id="resultMessage">
                    Voc√™ provou ser digno do conhecimento supremo!
                </div>
```

**Linha 1080-1082**: Mensagem do resultado

```html
                <div class="result-stats">
```

**Linha 1083**: Container das estat√≠sticas finais

```html
                    <div class="result-stat">
                        <span class="result-stat-value" id="finalScore">0</span>
                        <span class="result-stat-label">Pontua√ß√£o Final</span>
                    </div>
```

**Linha 1084-1087**: Estat√≠stica da pontua√ß√£o final

```html
                    <div class="result-stat">
                        <span class="result-stat-value" id="finalCombo">0</span>
                        <span class="result-stat-label">Combo M√°ximo</span>
                    </div>
```

**Linha 1088-1091**: Estat√≠stica do combo m√°ximo

```html
                    <div class="result-stat">
                        <span class="result-stat-value" id="finalTime">0</span>
                        <span class="result-stat-label">Tempo Restante</span>
                    </div>
```

**Linha 1092-1095**: Estat√≠stica do tempo restante

```html
                </div>
```

**Linha 1096**: Fecha container das estat√≠sticas

```html
                <button class="menu-btn" onclick="continueJourney()">CONTINUAR JORNADA</button>
```

**Linha 1097**: Bot√£o para continuar ap√≥s o resultado

```html
            </div>
```

**Linha 1098**: Fecha conte√∫do do resultado

```html
        </div>
```

**Linha 1099**: Fecha tela de resultado

```html
    </div>
```

**Linha 1100**: Fecha container principal do jogo

## SE√á√ÉO 39: IN√çCIO DO JAVASCRIPT - ESTADO DO JOGO (Linhas 1102-1125)

```html
    <script>
```

**Linha 1102**: Inicia se√ß√£o JavaScript

```javascript
        let gameState = {
```

**Linha 1103**: Objeto que armazena todo o estado do jogo

```javascript
            playerLevel: 1,
```

**Linha 1104**: N√≠vel inicial do jogador

```javascript
            playerPower: 100,
```

**Linha 1105**: Poder inicial do jogador

```javascript
            playerHP: 500,
```

**Linha 1106**: HP atual do jogador

```javascript
            playerMaxHP: 500,
```

**Linha 1107**: HP m√°ximo do jogador

```javascript
            victories: [],
```

**Linha 1108**: Array com IDs dos professores derrotados

```javascript
            defeats: 0,
```

**Linha 1109**: Contador de derrotas

```javascript
            maxCombo: 0,
```

**Linha 1110**: Maior combo alcan√ßado

```javascript
            currentBoss: null,
```

**Linha 1111**: Professor atual em batalha

```javascript
            bossHP: 1000,
```

**Linha 1112**: HP atual do boss

```javascript
            bossMaxHP: 1000,
```

**Linha 1113**: HP m√°ximo do boss

```javascript
            challengeTimer: null,
```

**Linha 1114**: Refer√™ncia do timer do desafio

```javascript
            timeLeft: 30,
```

**Linha 1115**: Tempo restante no desafio

```javascript
            currentChallenge: null,
```

**Linha 1116**: Desafio atual

```javascript
            isInBattle: false,
```

**Linha 1117**: Flag indicando se est√° em batalha

```javascript
            currentCombo: 0,
```

**Linha 1118**: Combo atual

```javascript
            totalScore: 0,
```

**Linha 1119**: Pontua√ß√£o total acumulada

```javascript
            battleStats: {
                questionsAnswered: 0,
                correctAnswers: 0,
                criticalHits: 0,
                timeBonus: 0
            }
```

**Linha 1120-1125**: Estat√≠sticas da batalha atual

```javascript
        };
```

**Linha 1126**: Fecha objeto gameState

## SE√á√ÉO 40: DADOS DOS PROFESSORES - MAZIM (Linhas 1128-1165)

```javascript
        const professors = [
```

**Linha 1128**: Array constante com dados de todos os professores

```javascript
            {
                id: 1, name: "Mazim", subject: "Portugu√™s", emoji: "üìö",
```

**Linha 1129**: Professor 1 - Mazim de Portugu√™s

```javascript
                color: "#8B5CF6", hp: 1200, difficulty: 3, powerLevel: 8500,
```

**Linha 1130**: Cor roxa, 1200 HP, dificuldade 3, poder 8500

```javascript
                description: "Mestre das palavras e guardi√£o da literatura brasileira",
```

**Linha 1131**: Descri√ß√£o do professor

```javascript
                phrases: [
                    "As palavras s√£o l√¢minas afiadas que cortam a ignor√¢ncia!",
                    "Sua ortografia √© uma ofensa aos grandes escritores!",
                    "Cada v√≠rgula mal colocada ser√° punida com dor intelectual!",
                    "Vou te fazer conjugar verbos at√© sua alma implorar por miseric√≥rdia!"
                ],
```

**Linha 1132-1137**: Frases intimidadoras do professor

```javascript
                challenges: [
                    {
                        type: "grammar",
                        question: "Complete corretamente: 'Vou ___ casa da vov√≥'",
                        options: ["a", "√†", "h√°", "ah"],
                        correct: 1,
                        timeLimit: 15,
                        difficulty: "hard"
                    },
```

**Linha 1138-1146**: Primeiro desafio - gram√°tica (crase)

```javascript
                    {
                        type: "literature",
                        question: "Quem escreveu 'O Corti√ßo'?",
                        options: ["Alu√≠sio Azevedo", "Machado de Assis", "Jos√© de Alencar", "Lima Barreto"],
                        correct: 0,
                        timeLimit: 20,
                        difficulty: "extreme"
                    },
```

**Linha 1147-1154**: Segundo desafio - literatura

```javascript
                    {
                        type: "syntax",
                        question: "Identifique o sujeito: 'Chegaram os convidados'",
                        options: ["Chegaram", "os convidados", "convidados", "N√£o h√° sujeito"],
                        correct: 1,
                        timeLimit: 25,
                        difficulty: "extreme"
                    },
```

**Linha 1155-1162**: Terceiro desafio - sintaxe

```javascript
                    {
                        type: "grammar",
                        question: "Qual a forma correta: 'H√° ___ anos n√£o o vejo'",
                        options: ["dois", "dous", "2", "II"],
                        correct: 0,
                        timeLimit: 18,
                        difficulty: "hard"
                    },
```

**Linha 1163-1170**: Quarto desafio - gram√°tica

```javascript
                    {
                        type: "literature",
                        question: "Qual movimento liter√°rio pertence Machado de Assis?",
                        options: ["Romantismo", "Realismo", "Modernismo", "Barroco"],
                        correct: 1,
                        timeLimit: 22,
                        difficulty: "extreme"
                    }
                ]
            },
```

**Linha 1171-1178**: Quinto desafio - literatura, fecha dados do Mazim

## SE√á√ÉO 41: PROFESSOR FERNANDO - MATEM√ÅTICA I (Linhas 1179-1220)

```javascript
            {
                id: 2, name: "Fernando", subject: "Matem√°tica I", emoji: "üî¢",
```

**Linha 1179**: Professor 2 - Fernando de Matem√°tica I

```javascript
                color: "#3B82F6", hp: 1400, difficulty: 4, powerLevel: 9200,
```

**Linha 1180**: Cor azul, 1400 HP, dificuldade 4, poder 9200

```javascript
                description: "Senhor dos n√∫meros e mestre das equa√ß√µes fundamentais",
```

**Linha 1181**: Descri√ß√£o do professor

```javascript
                phrases: [
                    "Os n√∫meros n√£o mentem, e eles dizem que voc√™ vai perder!",
                    "Vou calcular exatamente quanto voc√™ vai sofrer: INFINITO!",
                    "Sua ignor√¢ncia matem√°tica √© uma constante... ZERO!",
                    "Prepare-se para uma li√ß√£o de √°lgebra que doer√° at√© na alma!"
                ],
```

**Linha 1182-1187**: Frases intimidadoras matem√°ticas

```javascript
                challenges: [
                    {
                        type: "calculation",
                        question: "Resolva: 23 √ó 17 + 89 - 45",
                        answer: 435,
                        timeLimit: 20,
                        difficulty: "hard"
                    },
```

**Linha 1188-1195**: Primeiro desafio - c√°lculo (resposta num√©rica)

```javascript
                    {
                        type: "algebra",
                        question: "Se 4x + 12 = 36, qual o valor de x?",
                        answer: 6,
                        timeLimit: 25,
                        difficulty: "extreme"
                    },
```

**Linha 1196-1202**: Segundo desafio - √°lgebra

```javascript
                    {
                        type: "geometry",
                        question: "√Årea de um c√≠rculo com raio 6 (use œÄ = 3.14)",
                        answer: 113.04,
                        tolerance: 2,
                        timeLimit: 30,
                        difficulty: "extreme"
                    },
```

**Linha 1203-1210**: Terceiro desafio - geometria (com toler√¢ncia para aproxima√ß√£o)

```javascript
                    {
                        type: "calculation",
                        question: "Quanto √© 169 √∑ 13?",
                        answer: 13,
                        timeLimit: 12,
                        difficulty: "medium"
                    },
```

**Linha 1211-1217**: Quarto desafio - divis√£o

```javascript
                    {
                        type: "algebra",
                        question: "Se 3x - 8 = 19, qual o valor de x?",
                        answer: 9,
                        timeLimit: 20,
                        difficulty: "hard"
                    }
                ]
            },
```

**Linha 1218-1224**: Quinto desafio - √°lgebra, fecha dados do Fernando

## SE√á√ÉO 42: PROFESSOR PEIXOTO - MATEM√ÅTICA II (Linhas 1225-1260)

```javascript
            {
                id: 3, name: "Peixoto", subject: "Matem√°tica II", emoji: "üìê",
```

**Linha 1225**: Professor 3 - Peixoto de Matem√°tica II

```javascript
                color: "#1E40AF", hp: 1600, difficulty: 5, powerLevel: 9800,
```

**Linha 1226**: Cor azul escuro, 1600 HP, dificuldade 5, poder 9800

```javascript
                description: "Guardi√£o supremo da matem√°tica avan√ßada e senhor do c√°lculo",
```

**Linha 1227**: Descri√ß√£o do professor

```javascript
                phrases: [
                    "Matem√°tica avan√ßada √© meu reino! Voc√™ √© apenas um zero √† esquerda!",
                    "Vou te integrar... na derrota absoluta!",
                    "Suas derivadas de conhecimento tendem a MENOS INFINITO!",
                    "Prepare-se para limites infinitos de sofrimento matem√°tico!"
                ],
```

**Linha 1228-1233**: Frases com termos de c√°lculo

```javascript
                challenges: [
                    {
                        type: "calculus",
                        question: "Derivada de x¬≥ + 2x¬≤ - 5x + 3",
                        options: ["3x¬≤ + 4x - 5", "x¬≤ + 4x - 5", "3x¬≤ + 2x - 5", "3x¬≤ + 4x + 5"],
                        correct: 0,
                        timeLimit: 35,
                        difficulty: "extreme"
                    },
```

**Linha 1234-1242**: Primeiro desafio - c√°lculo diferencial

```javascript
                    {
                        type: "trigonometry",
                        question: "sen¬≤(x) + cos¬≤(x) = ?",
                        options: ["0", "1", "2", "œÄ"],
                        correct: 1,
                        timeLimit: 20,
                        difficulty: "hard"
                    },
```

**Linha 1243-1250**: Segundo desafio - identidade trigonom√©trica

```javascript
                    {
                        type: "integration",
                        question: "‚à´(2x + 3)dx = ?",
                        options: ["x¬≤ + 3x + C", "2x¬≤ + 3x + C", "x¬≤ + 3x", "2x + 3"],
                        correct: 0,
                        timeLimit: 40,
                        difficulty: "extreme"
                    },
```

**Linha 1251-1258**: Terceiro desafio - c√°lculo integral

```javascript
                    {
                        type: "limits",
                        question: "lim(x‚Üí0) (sen x)/x = ?",
                        options: ["0", "1", "‚àû", "N√£o existe"],
                        correct: 1,
                        timeLimit: 30,
                        difficulty: "extreme"
                    }
                ]
            },
```

**Linha 1259-1266**: Quarto desafio - limites, fecha dados do Peixoto

## SE√á√ÉO 43: PROFESSORES IRINEU, VICTOR, ANDR√â (Linhas 1267-1350)

```javascript
            {
                id: 4, name: "Irineu", subject: "Biologia", emoji: "üß¨",
                color: "#10B981", hp: 1300, difficulty: 4, powerLevel: 8800,
                description: "Mestre da vida e guardi√£o dos segredos celulares",
```

**Linha 1267-1270**: Professor 4 - Irineu de Biologia

```javascript
                phrases: [
                    "A evolu√ß√£o selecionou voc√™ para a extin√ß√£o!",
                    "Vou dissecar seu conhecimento c√©lula por c√©lula!",
                    "Sua ignor√¢ncia biol√≥gica √© uma muta√ß√£o letal!",
                    "Prepare-se para uma li√ß√£o de anatomia... da DOR!"
                ],
```

**Linha 1271-1276**: Frases biol√≥gicas intimidadoras

```javascript
                challenges: [
                    {
                        type: "cell_biology",
                        question: "Quantos cromossomos tem uma c√©lula humana normal?",
                        options: ["23", "44", "46", "48"],
                        correct: 2,
                        timeLimit: 20,
                        difficulty: "hard"
                    },
```

**Linha 1277-1284**: Desafio de biologia celular

```javascript
            {
                id: 5, name: "Victor", subject: "Hist√≥ria", emoji: "üèõÔ∏è",
                color: "#F59E0B", hp: 1500, difficulty: 4, powerLevel: 9100,
                description: "Senhor do tempo e guardi√£o dos segredos do passado",
```

**Linha 1300-1303**: Professor 5 - Victor de Hist√≥ria

```javascript
            {
                id: 6, name: "Andr√©", subject: "Sociologia", emoji: "üë•",
                color: "#EF4444", hp: 1200, difficulty: 3, powerLevel: 8300,
                description: "Mestre da sociedade e analista supremo do comportamento humano",
```

**Linha 1330-1333**: Professor 6 - Andr√© de Sociologia

## SE√á√ÉO 44: PROFESSORES ANDREANE, PEDRO RICARDO, CARLOS (Linhas 1351-1450)

```javascript
            {
                id: 7, name: "Andreane", subject: "Qu√≠mica", emoji: "‚öóÔ∏è",
                color: "#06B6D4", hp: 1450, difficulty: 5, powerLevel: 9500,
                description: "Alquimista suprema e senhora das rea√ß√µes moleculares",
```

**Linha 1351-1354**: Professor 7 - Andreane de Qu√≠mica

```javascript
                phrases: [
                    "Vamos fazer uma rea√ß√£o... EXPLOSIVA E LETAL!",
                    "Sua ignor√¢ncia qu√≠mica ser√° catalisada pela DOR PURA!",
                    "Vou balancear esta equa√ß√£o... com sua DESTRUI√á√ÉO!",
                    "Prepare-se para uma liga√ß√£o i√¥nica... com o SOFRIMENTO!"
                ],
```

**Linha 1355-1360**: Frases qu√≠micas intimidadoras

```javascript
            {
                id: 8, name: "Pedro Ricardo", subject: "Geografia", emoji: "üåç",
                color: "#84CC16", hp: 1350, difficulty: 4, powerLevel: 8700,
                description: "Navegador supremo e mestre dos continentes e oceanos",
```

**Linha 1380-1383**: Professor 8 - Pedro Ricardo de Geografia

```javascript
            {
                id: 9, name: "Carlos", subject: "F√≠sica", emoji: "‚ö°",
                color: "#F97316", hp: 1700, difficulty: 5, powerLevel: 10500,
                description: "Senhor das leis universais e mestre da energia c√≥smica",
```

**Linha 1410-1413**: Professor 9 - Carlos de F√≠sica (HP mais alto)

```javascript
                phrases: [
                    "As leis da f√≠sica s√£o ABSOLUTAS... assim como sua DERROTA!",
                    "Vou te mostrar a verdadeira for√ßa da gravidade... te ESMAGANDO!",
                    "Sua energia cin√©tica tende a ZERO ABSOLUTO!",
                    "Prepare-se para uma acelera√ß√£o... da DOR INFINITA!"
                ],
```

**Linha 1414-1419**: Frases f√≠sicas intimidadoras

## SE√á√ÉO 45: PROFESSORES DE FILOSOFIA E EDUCA√á√ÉO F√çSICA (Linhas 1451-1550)

```javascript
            {
                id: 10, name: "Gildeon", subject: "Filosofia I", emoji: "ü§î",
                color: "#7C3AED", hp: 1250, difficulty: 4, powerLevel: 8600,
                description: "Pensador supremo e guardi√£o da sabedoria ancestral",
```

**Linha 1451-1454**: Professor 10 - Gildeon de Filosofia I

```javascript
            {
                id: 11, name: "Denisfran", subject: "Filosofia II", emoji: "üí≠",
                color: "#5B21B6", hp: 1400, difficulty: 5, powerLevel: 9300,
                description: "Mestre do pensamento complexo e senhor da dial√©tica suprema",
```

**Linha 1480-1483**: Professor 11 - Denisfran de Filosofia II

```javascript
            {
                id: 12, name: "L√©o", subject: "Educa√ß√£o F√≠sica I", emoji: "üí™",
                color: "#DC2626", hp: 1800, difficulty: 4, powerLevel: 10200,
                description: "Gladiador supremo e mestre do condicionamento f√≠sico extremo",
```

**Linha 1510-1513**: Professor 12 - L√©o de Educa√ß√£o F√≠sica I (HP muito alto)

```javascript
            {
                id: 13, name: "Aurine", subject: "Educa√ß√£o F√≠sica II", emoji: "üèÉ‚Äç‚ôÄÔ∏è",
                color: "#BE185D", hp: 1600, difficulty: 4, powerLevel: 9700,
                description: "Amazona suprema e mestra da performance atl√©tica m√°xima",
```

**Linha 1540-1543**: Professor 13 - Aurine de Educa√ß√£o F√≠sica II

## SE√á√ÉO 46: PROFESSORES FINAIS (Linhas 1551-1600)

```javascript
            {
                id: 14, name: "Vilarinho", subject: "M√∫sica/Artes", emoji: "üéµ",
                color: "#7C2D12", hp: 1300, difficulty: 3, powerLevel: 8900,
                description: "Maestro supremo e guardi√£o da express√£o art√≠stica universal",
```

**Linha 1551-1554**: Professor 14 - Vilarinho de M√∫sica/Artes

```javascript
            {
                id: 15, name: "Jayslenne", subject: "Espanhol", emoji: "üá™üá∏",
                color: "#DC2626", hp: 1500, difficulty: 4, powerLevel: 9600,
                description: "Se√±ora suprema del idioma espa√±ol y guardiana de la cultura hisp√°nica",
```

**Linha 1580-1583**: Professor 15 - Jayslenne de Espanhol (√∫ltimo professor)

```javascript
                phrases: [
                    "¬°Voy a ense√±arte espa√±ol... a trav√©s del DOLOR INFINITO!",
                    "Tu pronunciaci√≥n es una ofensa a toda Hispanoam√©rica!",
                    "¬°Prep√°rate para conjugar verbos hasta que tu alma GRITE!",
                    "Voy a hacerte hablar espa√±ol... ¬°o MORIR en el intento!"
                ],
```

**Linha 1584-1589**: Frases em espanhol intimidadoras

```javascript
        ];
```

**Linha 1600**: Fecha array de professores

## SE√á√ÉO 47: FUN√á√ïES DE INICIALIZA√á√ÉO (Linhas 1602-1620)

```javascript
        function init() {
```

**Linha 1602**: Fun√ß√£o principal de inicializa√ß√£o

```javascript
            createParticleSystem();
```

**Linha 1603**: Cria sistema de part√≠culas

```javascript
            loadGameState();
```

**Linha 1604**: Carrega estado salvo do localStorage

```javascript
            generateProfessorGrid();
```

**Linha 1605**: Gera grade de professores

```javascript
            updateUI();
```

**Linha 1606**: Atualiza interface

```javascript
            setInterval(createRandomParticle, 500);
```

**Linha 1607**: Cria part√≠cula a cada 500ms

```javascript
        }
```

**Linha 1608**: Fecha fun√ß√£o init

```javascript
        function createParticleSystem() {
```

**Linha 1610**: Fun√ß√£o para criar sistema de part√≠culas

```javascript
            const particleSystem = document.getElementById('particleSystem');
```

**Linha 1611**: Obt√©m elemento do sistema de part√≠culas

```javascript
            for (let i = 0; i < 50; i++) {
```

**Linha 1612**: Loop para criar 50 part√≠culas iniciais

```javascript
                createParticle(particleSystem);
```

**Linha 1613**: Cria cada part√≠cula

```javascript
            }
```

**Linha 1614**: Fecha loop

```javascript
        }
```

**Linha 1615**: Fecha fun√ß√£o createParticleSystem

## SE√á√ÉO 48: CRIA√á√ÉO DE PART√çCULAS (Linhas 1617-1650)

```javascript
        function createParticle(container) {
```

**Linha 1617**: Fun√ß√£o para criar uma part√≠cula individual

```javascript
            const particle = document.createElement('div');
```

**Linha 1618**: Cria elemento div para a part√≠cula

```javascript
            particle.className = 'particle';
```

**Linha 1619**: Aplica classe CSS particle

```javascript
            particle.style.width = Math.random() * 8 + 4 + 'px';
```

**Linha 1620**: Largura aleat√≥ria entre 4-12px

```javascript
            particle.style.height = particle.style.width;
```

**Linha 1621**: Altura igual √† largura (quadrado)

```javascript
            particle.style.left = Math.random() * 100 + '%';
```

**Linha 1622**: Posi√ß√£o horizontal aleat√≥ria

```javascript
            particle.style.animationDelay = Math.random() * 15 + 's';
```

**Linha 1623**: Delay aleat√≥rio da anima√ß√£o

```javascript
            particle.style.animationDuration = (10 + Math.random() * 10) + 's';
```

**Linha 1624**: Dura√ß√£o aleat√≥ria entre 10-20s

```javascript
            const colors = ['#ff0080', '#8000ff', '#0080ff', '#00ff80', '#ff8000'];
```

**Linha 1626**: Array de cores poss√≠veis

```javascript
            const color = colors[Math.floor(Math.random() * colors.length)];
```

**Linha 1627**: Seleciona cor aleat√≥ria

```javascript
            particle.style.background = color;
```

**Linha 1628**: Aplica cor de fundo

```javascript
            particle.style.boxShadow = `0 0 ${Math.random() * 15 + 5}px ${color}`;
```

**Linha 1629**: Aplica sombra brilhante da mesma cor

```javascript
            container.appendChild(particle);
```

**Linha 1631**: Adiciona part√≠cula ao container

```javascript
            setTimeout(() => {
                if (particle.parentNode) {
                    particle.parentNode.removeChild(particle);
                }
            }, 15000);
```

**Linha 1633-1637**: Remove part√≠cula ap√≥s 15 segundos

```javascript
        }
```

**Linha 1638**: Fecha fun√ß√£o createParticle

## SE√á√ÉO 49: NAVEGA√á√ÉO ENTRE TELAS (Linhas 1640-1670)

```javascript
        function createRandomParticle() {
```

**Linha 1640**: Fun√ß√£o para criar part√≠culas aleat√≥rias continuamente

```javascript
            const particleSystem = document.getElementById('particleSystem');
```

**Linha 1641**: Obt√©m sistema de part√≠culas

```javascript
            if (particleSystem.children.length < 80) {
```

**Linha 1642**: Verifica se h√° menos de 80 part√≠culas

```javascript
                createParticle(particleSystem);
```

**Linha 1643**: Cria nova part√≠cula

```javascript
            }
```

**Linha 1644**: Fecha condi√ß√£o

```javascript
        }
```

**Linha 1645**: Fecha fun√ß√£o createRandomParticle

```javascript
        function showMainMenu() {
```

**Linha 1647**: Fun√ß√£o para mostrar menu principal

```javascript
            document.getElementById('mainMenu').style.display = 'flex';
```

**Linha 1648**: Mostra menu principal

```javascript
            document.getElementById('professorSelect').style.display = 'none';
```

**Linha 1649**: Esconde sele√ß√£o de professores

```javascript
            document.getElementById('battleArena').style.display = 'none';
```

**Linha 1650**: Esconde arena de batalha

```javascript
            document.getElementById('resultScreen').style.display = 'none';
```

**Linha 1651**: Esconde tela de resultado

```javascript
        }
```

**Linha 1652**: Fecha fun√ß√£o showMainMenu

```javascript
        function showProfessorSelect() {
```

**Linha 1654**: Fun√ß√£o para mostrar sele√ß√£o de professores

```javascript
            document.getElementById('mainMenu').style.display = 'none';
```

**Linha 1655**: Esconde menu principal

```javascript
            document.getElementById('professorSelect').style.display = 'block';
```

**Linha 1656**: Mostra sele√ß√£o de professores

```javascript
            document.getElementById('battleArena').style.display = 'none';
```

**Linha 1657**: Esconde arena de batalha

```javascript
            generateProfessorGrid();
```

**Linha 1658**: Regenera grade de professores

```javascript
            updateUI();
```

**Linha 1659**: Atualiza interface

```javascript
        }
```

**Linha 1660**: Fecha fun√ß√£o showProfessorSelect

## SE√á√ÉO 50: GERA√á√ÉO DA GRADE DE PROFESSORES (Linhas 1662-1720)

```javascript
        function generateProfessorGrid() {
```

**Linha 1662**: Fun√ß√£o para gerar grade de professores

```javascript
            const grid = document.getElementById('professorGrid');
```

**Linha 1663**: Obt√©m elemento da grade

```javascript
            grid.innerHTML = '';
```

**Linha 1664**: Limpa conte√∫do anterior

```javascript
            professors.forEach(professor => {
```

**Linha 1666**: Loop atrav√©s de todos os professores

```javascript
                const isUnlocked = isProfessorUnlocked(professor);
```

**Linha 1667**: Verifica se professor est√° desbloqueado

```javascript
                const isCompleted = gameState.victories.includes(professor.id);
```

**Linha 1668**: Verifica se professor foi derrotado

```javascript
                const card = document.createElement('div');
```

**Linha 1670**: Cria elemento do card

```javascript
                card.className = `professor-card ${isCompleted ? 'completed' : isUnlocked ? 'unlocked' : 'locked'}`;
```

**Linha 1671**: Aplica classes CSS baseadas no status

```javascript
                if (isUnlocked && !isCompleted) {
                    card.onclick = () => startBattle(professor);
                }
```

**Linha 1673-1675**: Adiciona evento de clique se dispon√≠vel

```javascript
                const randomPhrase = professor.phrases[Math.floor(Math.random() * professor.phrases.length)];
```

**Linha 1677**: Seleciona frase aleat√≥ria do professor

```javascript
                card.innerHTML = `
                    <div class="professor-avatar" style="border-color: ${professor.color}; background: linear-gradient(45deg, ${professor.color}20, ${professor.color}40);">
                        ${isUnlocked ? professor.emoji : 'üîí'}
                    </div>
```

**Linha 1679-1682**: HTML do avatar (emoji ou cadeado)

```javascript
                    <div class="professor-name">Prof. ${professor.name}</div>
                    <div class="professor-subject" style="color: ${professor.color};">${professor.subject}</div>
                    <div class="professor-description">${professor.description}</div>
```

**Linha 1683-1685**: Nome, mat√©ria e descri√ß√£o

```javascript
                    <div class="professor-stats">
                        <div class="stat-item">
                            <span class="stat-value" style="color: ${professor.color};">${professor.hp}</span>
                            <span class="stat-label">HP</span>
                        </div>
                        <div class="stat-item">
                            <span class="stat-value" style="color: ${professor.color};">${professor.powerLevel}</span>
                            <span class="stat-label">Poder</span>
                        </div>
                        <div class="stat-item">
                            <span class="stat-value" style="color: ${professor.color};">${'‚≠ê'.repeat(professor.difficulty)}</span>
                            <span class="stat-label">Dificuldade</span>
                        </div>
                    </div>
```

**Linha 1687-1699**: Estat√≠sticas do professor

```javascript
                    <div style="background: rgba(0,0,0,0.5); padding: 1rem; border-radius: 10px; margin-top: 1rem; border-left: 3px solid ${professor.color};">
                        <div style="font-style: italic; font-size: 0.85rem; color: #ddd; text-align: center;">
                            "${randomPhrase.substring(0, 60)}..."
                        </div>
                    </div>
```

**Linha 1701-1705**: Caixa com frase do professor

```javascript
                    <div style="text-align: center; margin-top: 1rem; font-weight: bold; font-size: 1rem;">
                        ${isCompleted ? '‚úÖ DERROTADO' : isUnlocked ? '‚öîÔ∏è DISPON√çVEL' : 'üîí BLOQUEADO'}
                    </div>
                `;
```

**Linha 1707-1710**: Status do professor

```javascript
                grid.appendChild(card);
```

**Linha 1712**: Adiciona card √† grade

```javascript
            });
```

**Linha 1713**: Fecha loop forEach

```javascript
        }
```

**Linha 1714**: Fecha fun√ß√£o generateProfessorGrid

## SE√á√ÉO 51: L√ìGICA DE DESBLOQUEIO E BATALHA (Linhas 1716-1760)

```javascript
        function isProfessorUnlocked(professor) {
```

**Linha 1716**: Fun√ß√£o para verificar se professor est√° desbloqueado

```javascript
            if (professor.id === 1) return true;
```

**Linha 1717**: Primeiro professor sempre desbloqueado

```javascript
            return gameState.victories.includes(professor.id - 1);
```

**Linha 1718**: Outros professores desbloqueiam ap√≥s derrotar o anterior

```javascript
        }
```

**Linha 1719**: Fecha fun√ß√£o isProfessorUnlocked

```javascript
        function startBattle(professor) {
```

**Linha 1721**: Fun√ß√£o para iniciar batalha

```javascript
            if (!isProfessorUnlocked(professor)) {
```

**Linha 1722**: Verifica se professor est√° desbloqueado

```javascript
                alert('Este mestre ainda est√° selado! Derrote o anterior primeiro!');
```

**Linha 1723**: Alerta se n√£o estiver desbloqueado

```javascript
                return;
```

**Linha 1724**: Sai da fun√ß√£o

```javascript
            }
```

**Linha 1725**: Fecha condi√ß√£o

```javascript
            gameState.currentBoss = professor;
```

**Linha 1727**: Define professor atual

```javascript
            gameState.bossHP = professor.hp;
```

**Linha 1728**: Define HP do boss

```javascript
            gameState.bossMaxHP = professor.hp;
```

**Linha 1729**: Define HP m√°ximo do boss

```javascript
            gameState.playerHP = gameState.playerMaxHP;
```

**Linha 1730**: Restaura HP do jogador

```javascript
            gameState.isInBattle = true;
```

**Linha 1731**: Marca como em batalha

```javascript
            gameState.currentCombo = 0;
```

**Linha 1732**: Reseta combo

```javascript
            gameState.battleStats = {
                questionsAnswered: 0,
                correctAnswers: 0,
                criticalHits: 0,
                timeBonus: 0
            };
```

**Linha 1733-1738**: Reseta estat√≠sticas da batalha

```javascript
            document.getElementById('professorSelect').style.display = 'none';
```

**Linha 1740**: Esconde sele√ß√£o de professores

```javascript
            document.getElementById('battleArena').style.display = 'block';
```

**Linha 1741**: Mostra arena de batalha

```javascript
            setupBattle(professor);
```

**Linha 1742**: Configura a batalha

```javascript
        }
```

**Linha 1743**: Fecha fun√ß√£o startBattle

## SE√á√ÉO 52: CONFIGURA√á√ÉO DA BATALHA (Linhas 1745-1780)

```javascript
        function setupBattle(professor) {
```

**Linha 1745**: Fun√ß√£o para configurar batalha

```javascript
            const bossElement = document.getElementById('professorBoss');
```

**Linha 1746**: Obt√©m elemento do boss

```javascript
            bossElement.style.borderColor = professor.color;
```

**Linha 1747**: Define cor da borda

```javascript
            bossElement.style.color = professor.color;
```

**Linha 1748**: Define cor do texto

```javascript
            document.getElementById('bossAvatar').textContent = professor.emoji;
```

**Linha 1750**: Define emoji do boss

```javascript
            document.getElementById('bossAvatar').style.borderColor = professor.color;
```

**Linha 1751**: Define cor da borda do avatar

```javascript
            document.getElementById('bossAvatar').style.background = `linear-gradient(45deg, ${professor.color}40, ${professor.color}80)`;
```

**Linha 1752**: Define gradiente do fundo do avatar

```javascript
            document.getElementById('bossName').textContent = `MESTRE ${professor.name.toUpperCase()}`;
```

**Linha 1754**: Define nome do boss em mai√∫sculas

```javascript
            document.getElementById('bossSubject').textContent = professor.subject.toUpperCase();
```

**Linha 1755**: Define mat√©ria em mai√∫sculas

```javascript
            const dialogueContainer = document.getElementById('dialogueContainer');
```

**Linha 1757**: Obt√©m container do di√°logo

```javascript
            dialogueContainer.style.borderColor = professor.color;
```

**Linha 1758**: Define cor da borda do di√°logo

```javascript
            dialogueContainer.style.color = professor.color;
```

**Linha 1759**: Define cor do texto do di√°logo

```javascript
            updateBattleUI();
```

**Linha 1761**: Atualiza interface da batalha

```javascript
            const phrase = professor.phrases[Math.floor(Math.random() * professor.phrases.length)];
```

**Linha 1763**: Seleciona frase aleat√≥ria

```javascript
            typeText(phrase, () => {
                document.getElementById('startChallengeBtn').style.display = 'block';
            });
```

**Linha 1764-1766**: Digita frase e mostra bot√£o

```javascript
        }
```

**Linha 1767**: Fecha fun√ß√£o setupBattle

## SE√á√ÉO 53: ATUALIZA√á√ÉO DA INTERFACE DE BATALHA (Linhas 1769-1800)

```javascript
        function updateBattleUI() {
```

**Linha 1769**: Fun√ß√£o para atualizar UI da batalha

```javascript
            const playerHPPercent = (gameState.playerHP / gameState.playerMaxHP) * 100;
```

**Linha 1770**: Calcula porcentagem do HP do jogador

```javascript
            const bossHPPercent = (gameState.bossHP / gameState.bossMaxHP) * 100;
```

**Linha 1771**: Calcula porcentagem do HP do boss

```javascript
            document.getElementById('playerHPFill').style.width = playerHPPercent + '%';
```

**Linha 1773**: Atualiza barra de HP do jogador

```javascript
            document.getElementById('playerHPText').textContent = `${gameState.playerHP}/${gameState.playerMaxHP}`;
```

**Linha 1774**: Atualiza texto do HP do jogador

```javascript
            document.getElementById('bossHPFill').style.width = bossHPPercent + '%';
```

**Linha 1776**: Atualiza barra de HP do boss

```javascript
            document.getElementById('bossHPText').textContent = `${gameState.bossHP}/${gameState.bossMaxHP}`;
```

**Linha 1777**: Atualiza texto do HP do boss

```javascript
            document.getElementById('playerLevelDisplay').textContent = `N√çVEL ${gameState.playerLevel}`;
```

**Linha 1779**: Atualiza display do n√≠vel

```javascript
            if (gameState.currentCombo > 0) {
                document.getElementById('comboCounter').style.display = 'block';
                document.getElementById('comboValue').textContent = gameState.currentCombo;
            } else {
                document.getElementById('comboCounter').style.display = 'none';
            }
```

**Linha 1781-1786**: Mostra/esconde contador de combo

```javascript
        }
```

**Linha 1787**: Fecha fun√ß√£o updateBattleUI

## SE√á√ÉO 54: EFEITO DE DIGITA√á√ÉO (Linhas 1789-1815)

```javascript
        function typeText(text, callback) {
```

**Linha 1789**: Fun√ß√£o para efeito de digita√ß√£o

```javascript
            const dialogueElement = document.getElementById('dialogueText');
```

**Linha 1790**: Obt√©m elemento do di√°logo

```javascript
            const startBtn = document.getElementById('startChallengeBtn');
```

**Linha 1791**: Obt√©m bot√£o de iniciar

```javascript
            dialogueElement.innerHTML = '';
```

**Linha 1793**: Limpa texto anterior

```javascript
            dialogueElement.classList.add('typing-effect');
```

**Linha 1794**: Adiciona classe do efeito de digita√ß√£o

```javascript
            startBtn.style.display = 'none';
```

**Linha 1795**: Esconde bot√£o

```javascript
            let i = 0;
```

**Linha 1797**: Contador de caracteres

```javascript
            const typeInterval = setInterval(() => {
```

**Linha 1798**: Intervalo para digita√ß√£o

```javascript
                if (i < text.length) {
```

**Linha 1799**: Se ainda h√° caracteres

```javascript
                    dialogueElement.innerHTML += text.charAt(i);
```

**Linha 1800**: Adiciona pr√≥ximo caractere

```javascript
                    i++;
```

**Linha 1801**: Incrementa contador

```javascript
                } else {
```

**Linha 1802**: Se terminou

```javascript
                    clearInterval(typeInterval);
```

**Linha 1803**: Para o intervalo

```javascript
                    dialogueElement.classList.remove('typing-effect');
```

**Linha 1804**: Remove efeito de digita√ß√£o

```javascript
                    if (callback) callback();
```

**Linha 1805**: Executa callback se existir

```javascript
                }
```

**Linha 1806**: Fecha else

```javascript
            }, 40);
```

**Linha 1807**: Intervalo de 40ms entre caracteres

```javascript
        }
```

**Linha 1808**: Fecha fun√ß√£o typeText

## SE√á√ÉO 55: IN√çCIO DO DESAFIO (Linhas 1810-1840)

```javascript
        function startChallenge() {
```

**Linha 1810**: Fun√ß√£o para iniciar desafio

```javascript
            document.getElementById('dialogueContainer').style.display = 'none';
```

**Linha 1811**: Esconde container do di√°logo

```javascript
            document.getElementById('challengeArena').style.display = 'block';
```

**Linha 1812**: Mostra arena do desafio

```javascript
            const professor = gameState.currentBoss;
```

**Linha 1814**: Obt√©m professor atual

```javascript
            const challenge = professor.challenges[Math.floor(Math.random() * professor.challenges.length)];
```

**Linha 1815**: Seleciona desafio aleat√≥rio

```javascript
            gameState.currentChallenge = challenge;
```

**Linha 1816**: Define desafio atual

```javascript
            gameState.timeLeft = challenge.timeLimit;
```

**Linha 1817**: Define tempo limite

```javascript
            document.getElementById('challengeTitle').textContent = `DESAFIO DE ${professor.subject.toUpperCase()}`;
```

**Linha 1819**: Define t√≠tulo do desafio

```javascript
            generateChallenge(challenge);
```

**Linha 1821**: Gera conte√∫do do desafio

```javascript
            startTimer();
```

**Linha 1822**: Inicia timer

```javascript
        }
```

**Linha 1823**: Fecha fun√ß√£o startChallenge

## SE√á√ÉO 56: GERA√á√ÉO DO DESAFIO (Linhas 1825-1870)

```javascript
        function generateChallenge(challenge) {
```

**Linha 1825**: Fun√ß√£o para gerar desafio

```javascript
            const content = document.getElementById('challengeContent');
```

**Linha 1826**: Obt√©m container do conte√∫do

```javascript
            content.innerHTML = '';
```

**Linha 1827**: Limpa conte√∫do anterior

```javascript
            if (challenge.type === 'calculation' || challenge.answer !== undefined) {
```

**Linha 1829**: Se √© desafio matem√°tico (resposta num√©rica)

```javascript
                content.innerHTML = `
                    <div class="math-challenge">
                        <div class="equation-display">${challenge.question}</div>
                        <div class="answer-section">
                            <div class="answer-display" id="answerDisplay">0</div>
                            <div class="number-grid">
                                ${[1,2,3,'C',4,5,6,'‚å´',7,8,9,'.',0,'=','‚àí','+'].map(num =>
                                    `<button class="number-btn" onclick="inputNumber('${num}')">${num}</button>`
                                ).join('')}
                            </div>
                            <button class="menu-btn" onclick="submitMathAnswer()" style="margin-top: 1rem; background: linear-gradient(45deg, #00ff00, #00aa00);">
                                ‚ö° CONFIRMAR RESPOSTA
                            </button>
                        </div>
                    </div>
                `;
```

**Linha 1830-1845**: HTML para desafio matem√°tico com calculadora

```javascript
            } else {
```

**Linha 1846**: Se √© m√∫ltipla escolha

```javascript
                content.innerHTML = `
                    <div class="multiple-choice">
                        <div class="question-text">${challenge.question}</div>
                        <div class="options-grid">
                            ${challenge.options.map((option, index) =>
                                `<button class="option-btn" onclick="selectOption(${index})">${option}</button>`
                            ).join('')}
                        </div>
                    </div>
                `;
```

**Linha 1847-1856**: HTML para m√∫ltipla escolha

```javascript
            }
```

**Linha 1857**: Fecha condi√ß√£o

```javascript
        }
```

**Linha 1858**: Fecha fun√ß√£o generateChallenge

## SE√á√ÉO 57: ENTRADA DE N√öMEROS (Linhas 1860-1890)

```javascript
        let currentAnswer = '';
```

**Linha 1860**: Vari√°vel para resposta atual

```javascript
        function inputNumber(num) {
```

**Linha 1862**: Fun√ß√£o para entrada de n√∫meros

```javascript
            if (num === 'C') {
```

**Linha 1863**: Se √© bot√£o Clear

```javascript
                currentAnswer = '';
```

**Linha 1864**: Limpa resposta

```javascript
                document.getElementById('answerDisplay').textContent = '0';
```

**Linha 1865**: Mostra 0

```javascript
            } else if (num === '‚å´') {
```

**Linha 1866**: Se √© backspace

```javascript
                currentAnswer = currentAnswer.slice(0, -1);
```

**Linha 1867**: Remove √∫ltimo caractere

```javascript
                document.getElementById('answerDisplay').textContent = currentAnswer || '0';
```

**Linha 1868**: Atualiza display

```javascript
            } else if (num === '=') {
```

**Linha 1869**: Se √© igual

```javascript
                submitMathAnswer();
```

**Linha 1870**: Submete resposta

```javascript
            } else if (num === '‚àí') {
```

**Linha 1871**: Se √© menos

```javascript
                currentAnswer += '-';
```

**Linha 1872**: Adiciona sinal negativo

```javascript
                document.getElementById('answerDisplay').textContent = currentAnswer;
```

**Linha 1873**: Atualiza display

```javascript
            } else {
```

**Linha 1874**: Outros n√∫meros/operadores

```javascript
                currentAnswer += num;
```

**Linha 1875**: Adiciona √† resposta

```javascript
                document.getElementById('answerDisplay').textContent = currentAnswer;
```

**Linha 1876**: Atualiza display

```javascript
            }
```

**Linha 1877**: Fecha else

```javascript
        }
```

**Linha 1878**: Fecha fun√ß√£o inputNumber

## SE√á√ÉO 58: SUBMISS√ÉO DE RESPOSTA MATEM√ÅTICA (Linhas 1880-1910)

```javascript
        function submitMathAnswer() {
```

**Linha 1880**: Fun√ß√£o para submeter resposta matem√°tica

```javascript
            const challenge = gameState.currentChallenge;
```

**Linha 1881**: Obt√©m desafio atual

```javascript
            const userAnswer = parseFloat(currentAnswer);
```

**Linha 1882**: Converte resposta para n√∫mero

```javascript
            const correctAnswer = challenge.answer;
```

**Linha 1883**: Obt√©m resposta correta

```javascript
            clearInterval(gameState.challengeTimer);
```

**Linha 1885**: Para o timer

```javascript
            let isCorrect = false;
```

**Linha 1887**: Flag de resposta correta

```javascript
            if (challenge.tolerance) {
```

**Linha 1888**: Se h√° toler√¢ncia para aproxima√ß√£o

```javascript
                isCorrect = Math.abs(userAnswer - correctAnswer) <= challenge.tolerance;
```

**Linha 1889**: Verifica dentro da toler√¢ncia

```javascript
            } else {
```

**Linha 1890**: Se n√£o h√° toler√¢ncia

```javascript
                isCorrect = userAnswer === correctAnswer;
```

**Linha 1891**: Verifica igualdade exata

```javascript
            }
```

**Linha 1892**: Fecha condi√ß√£o

```javascript
            document.getElementById('challengeArena').style.display = 'none';
```

**Linha 1894**: Esconde arena do desafio

```javascript
            processAnswer(isCorrect);
```

**Linha 1895**: Processa resposta

```javascript
        }
```

**Linha 1896**: Fecha fun√ß√£o submitMathAnswer

## SE√á√ÉO 59: SELE√á√ÉO DE OP√á√ÉO (Linhas 1898-1920)

```javascript
        function selectOption(selectedIndex) {
```

**Linha 1898**: Fun√ß√£o para selecionar op√ß√£o

```javascript
            const challenge = gameState.currentChallenge;
```

**Linha 1899**: Obt√©m desafio atual

```javascript
            const options = document.querySelectorAll('.option-btn');
```

**Linha 1900**: Obt√©m todos os bot√µes de op√ß√£o

```javascript
            clearInterval(gameState.challengeTimer);
```

**Linha 1902**: Para o timer

```javascript
            options.forEach((option, index) => {
```

**Linha 1904**: Loop atrav√©s das op√ß√µes

```javascript
                option.onclick = null;
```

**Linha 1905**: Remove evento de clique

```javascript
                if (index === challenge.correct) {
```

**Linha 1906**: Se √© a op√ß√£o correta

```javascript
                    option.classList.add('correct');
```

**Linha 1907**: Adiciona classe correct

```javascript
                } else if (index === selectedIndex && index !== challenge.correct) {
```

**Linha 1908**: Se √© a op√ß√£o selecionada e incorreta

```javascript
                    option.classList.add('incorrect');
```

**Linha 1909**: Adiciona classe incorrect

```javascript
                }
```

**Linha 1910**: Fecha condi√ß√£o

```javascript
            });
```

**Linha 1911**: Fecha forEach

```javascript
            setTimeout(() => {
                document.getElementById('challengeArena').style.display = 'none';
                processAnswer(selectedIndex === challenge.correct);
            }, 1500);
```

**Linha 1913-1916**: Aguarda 1.5s e processa resposta

```javascript
        }
```

**Linha 1917**: Fecha fun√ß√£o selectOption

## SE√á√ÉO 60: PROCESSAMENTO DA RESPOSTA (Linhas 1919-1980)

```javascript
        function processAnswer(isCorrect) {
```

**Linha 1919**: Fun√ß√£o para processar resposta

```javascript
            const professor = gameState.currentBoss;
```

**Linha 1920**: Obt√©m professor atual

```javascript
            gameState.battleStats.questionsAnswered++;
```

**Linha 1921**: Incrementa perguntas respondidas

```javascript
            if (isCorrect) {
```

**Linha 1923**: Se resposta correta

```javascript
                gameState.battleStats.correctAnswers++;
```

**Linha 1924**: Incrementa respostas corretas

```javascript
                gameState.currentCombo++;
```

**Linha 1925**: Incrementa combo

```javascript
                if (gameState.currentCombo > gameState.maxCombo) {
                    gameState.maxCombo = gameState.currentCombo;
                }
```

**Linha 1926-1928**: Atualiza combo m√°ximo se necess√°rio

```javascript
                let baseDamage = Math.floor(Math.random() * 120) + 80;
```

**Linha 1930**: Dano base aleat√≥rio (80-199)

```javascript
                let comboMultiplier = 1 + (gameState.currentCombo * 0.25);
```

**Linha 1931**: Multiplicador de combo (+25% por combo)

```javascript
                let finalDamage = Math.floor(baseDamage * comboMultiplier);
```

**Linha 1932**: Dano final com combo

```javascript
                let isCritical = Math.random() < 0.2;
```

**Linha 1934**: 20% chance de cr√≠tico

```javascript
                if (isCritical) {
                    finalDamage *= 2;
                    gameState.battleStats.criticalHits++;
                }
```

**Linha 1935-1938**: Dobra dano se cr√≠tico

```javascript
                gameState.bossHP = Math.max(0, gameState.bossHP - finalDamage);
```

**Linha 1940**: Aplica dano ao boss

```javascript
                showDamageEffect(document.querySelector('.professor-boss'), finalDamage, isCritical ? 'damage-critical' : 'damage-boss');
```

**Linha 1941**: Mostra efeito de dano no boss

```javascript
                const message = isCritical ?
                    `CR√çTICO! Dano devastador de ${finalDamage}! Combo ${gameState.currentCombo}x!` :
                    `Excelente! ${finalDamage} de dano! Combo ${gameState.currentCombo}x!`;
```

**Linha 1943-1945**: Mensagem baseada se foi cr√≠tico ou n√£o

```javascript
                document.getElementById('dialogueContainer').style.display = 'block';
```

**Linha 1947**: Mostra container do di√°logo

```javascript
                typeText(message, () => {
                    if (gameState.bossHP <= 0) {
                        victory();
                    } else {
                        bossAttack();
                    }
                });
```

**Linha 1948-1954**: Digita mensagem e verifica se boss morreu

```javascript
            } else {
```

**Linha 1955**: Se resposta incorreta

```javascript
                gameState.currentCombo = 0;
```

**Linha 1956**: Reseta combo

```javascript
                let damage = Math.floor(Math.random() * 100) + 60;
```

**Linha 1958**: Dano base do boss (60-159)

```javascript
                const hpPercent = gameState.bossHP / gameState.bossMaxHP;
```

**Linha 1960**: Calcula porcentagem de HP do boss

```javascript
                if (hpPercent < 0.3) {
                    damage *= 1.6;
                } else if (hpPercent < 0.6) {
                    damage *= 1.3;
                }
```

**Linha 1961-1965**: Boss fica mais forte com HP baixo

```javascript
                damage = Math.floor(damage);
```

**Linha 1967**: Arredonda dano

```javascript
                gameState.playerHP = Math.max(0, gameState.playerHP - damage);
```

**Linha 1968**: Aplica dano ao jogador

```javascript
                showDamageEffect(document.querySelector('.player-area'), damage, 'damage-player');
```

**Linha 1970**: Mostra efeito de dano no jogador

```javascript
                document.getElementById('dialogueContainer').style.display = 'block';
```

**Linha 1972**: Mostra container do di√°logo

```javascript
                typeText(`Resposta incorreta! Voc√™ recebeu ${damage} de dano! Combo perdido!`, () => {
                    if (gameState.playerHP <= 0) {
                        defeat();
                    } else {
                        bossAttack();
                    }
                });
```

**Linha 1973-1979**: Digita mensagem de erro e verifica se jogador morreu

```javascript
            }
```

**Linha 1980**: Fecha else

```javascript
            updateBattleUI();
```

**Linha 1982**: Atualiza interface da batalha

```javascript
        }
```

**Linha 1983**: Fecha fun√ß√£o processAnswer

## SE√á√ÉO 61: TIMER DO DESAFIO (Linhas 1985-2005)

```javascript
        function startTimer() {
```

**Linha 1985**: Fun√ß√£o para iniciar timer

```javascript
            const timerFill = document.getElementById('timerFill');
```

**Linha 1986**: Obt√©m preenchimento do timer

```javascript
            const timerText = document.getElementById('timerText');
```

**Linha 1987**: Obt√©m texto do timer

```javascript
            gameState.challengeTimer = setInterval(() => {
```

**Linha 1989**: Inicia intervalo do timer

```javascript
                gameState.timeLeft--;
```

**Linha 1990**: Decrementa tempo

```javascript
                const percentage = (gameState.timeLeft / gameState.currentChallenge.timeLimit) * 100;
```

**Linha 1991**: Calcula porcentagem restante

```javascript
                timerFill.style.width = percentage + '%';
```

**Linha 1992**: Atualiza barra do timer

```javascript
                timerText.textContent = `Tempo: ${gameState.timeLeft}s`;
```

**Linha 1993**: Atualiza texto do timer

```javascript
                if (gameState.timeLeft <= 0) {
```

**Linha 1995**: Se tempo esgotou

```javascript
                    clearInterval(gameState.challengeTimer);
```

**Linha 1996**: Para o timer

```javascript
                    document.getElementById('challengeArena').style.display = 'none';
```

**Linha 1997**: Esconde arena do desafio

```javascript
                    processAnswer(false);
```

**Linha 1998**: Processa como resposta incorreta

```javascript
                }
```

**Linha 1999**: Fecha condi√ß√£o

```javascript
            }, 1000);
```

**Linha 2000**: Intervalo de 1 segundo

```javascript
        }
```

**Linha 2001**: Fecha fun√ß√£o startTimer

## SE√á√ÉO 62: ATAQUE DO BOSS (Linhas 2003-2040)

```javascript
        function bossAttack() {
```

**Linha 2003**: Fun√ß√£o para ataque do boss

```javascript
            const professor = gameState.currentBoss;
```

**Linha 2004**: Obt√©m professor atual

```javascript
            let damage = Math.floor(Math.random() * 80) + 50;
```

**Linha 2005**: Dano base do boss (50-129)

```javascript
            const hpPercent = gameState.bossHP / gameState.bossMaxHP;
```

**Linha 2007**: Calcula porcentagem de HP do boss

```javascript
            if (hpPercent < 0.3) {
                damage *= 1.5;
            } else if (hpPercent < 0.6) {
                damage *= 1.2;
            }
```

**Linha 2008-2012**: Boss fica mais forte com HP baixo

```javascript
            damage = Math.floor(damage);
```

**Linha 2014**: Arredonda dano

```javascript
            if (Math.random() < 0.25) {
                damage *= 1.8;
            }
```

**Linha 2016-2018**: 25% chance de ataque especial

```javascript
            gameState.playerHP = Math.max(0, gameState.playerHP - damage);
```

**Linha 2020**: Aplica dano ao jogador

```javascript
            showDamageEffect(document.querySelector('.player-area'), damage, 'damage-player');
```

**Linha 2021**: Mostra efeito de dano

```javascript
            const attackPhrase = `${professor.name} contra-atacou! ${damage} de dano!`;
```

**Linha 2023**: Mensagem do ataque

```javascript
            setTimeout(() => {
```

**Linha 2025**: Aguarda 1 segundo

```javascript
                typeText(attackPhrase, () => {
```

**Linha 2026**: Digita mensagem do ataque

```javascript
                    updateBattleUI();
```

**Linha 2027**: Atualiza interface

```javascript
                    if (gameState.playerHP <= 0) {
```

**Linha 2028**: Se jogador morreu

```javascript
                        defeat();
```

**Linha 2029**: Chama fun√ß√£o de derrota

```javascript
                    } else {
```

**Linha 2030**: Se jogador ainda vive

```javascript
                        setTimeout(() => {
```

**Linha 2031**: Aguarda 2 segundos

```javascript
                            const nextPhrase = professor.phrases[Math.floor(Math.random() * professor.phrases.length)];
```

**Linha 2032**: Seleciona pr√≥xima frase

```javascript
                            typeText(nextPhrase, () => {
```

**Linha 2033**: Digita pr√≥xima frase

```javascript
                                document.getElementById('startChallengeBtn').style.display = 'block';
```

**Linha 2034**: Mostra bot√£o de pr√≥ximo desafio

```javascript
                            });
```

**Linha 2035**: Fecha typeText

```javascript
                        }, 2000);
```

**Linha 2036**: Fecha setTimeout de 2 segundos

```javascript
                    }
```

**Linha 2037**: Fecha else

```javascript
                });
```

**Linha 2038**: Fecha typeText do ataque

```javascript
            }, 1000);
```

**Linha 2039**: Fecha setTimeout de 1 segundo

```javascript
        }
```

**Linha 2040**: Fecha fun√ß√£o bossAttack

## SE√á√ÉO 63: EFEITO DE DANO VISUAL (Linhas 2042-2055)

```javascript
        function showDamageEffect(target, damage, type) {
```

**Linha 2042**: Fun√ß√£o para mostrar efeito de dano

```javascript
            const effect = document.createElement('div');
```

**Linha 2043**: Cria elemento do efeito

```javascript
            effect.className = `damage-effect ${type}`;
```

**Linha 2044**: Aplica classes CSS

```javascript
            effect.textContent = `-${damage}`;
```

**Linha 2045**: Define texto do dano

```javascript
            const rect = target.getBoundingClientRect();
```

**Linha 2047**: Obt√©m posi√ß√£o do alvo

```javascript
            effect.style.left = rect.left + rect.width/2 + 'px';
```

**Linha 2048**: Posiciona horizontalmente no centro do alvo

```javascript
            effect.style.top = rect.top + 'px';
```

**Linha 2049**: Posiciona verticalmente no topo do alvo

```javascript
            effect.style.position = 'fixed';
```

**Linha 2050**: Define posi√ß√£o fixa

```javascript
            document.body.appendChild(effect);
```

**Linha 2052**: Adiciona ao body

```javascript
            setTimeout(() => effect.remove(), 2000);
```

**Linha 2053**: Remove ap√≥s 2 segundos

```javascript
        }
```

**Linha 2054**: Fecha fun√ß√£o showDamageEffect

## SE√á√ÉO 64: VIT√ìRIA (Linhas 2056-2100)

```javascript
        function victory() {
```

**Linha 2056**: Fun√ß√£o de vit√≥ria

```javascript
            gameState.victories.push(gameState.currentBoss.id);
```

**Linha 2057**: Adiciona professor √† lista de vit√≥rias

```javascript
            gameState.playerLevel++;
```

**Linha 2058**: Aumenta n√≠vel do jogador

```javascript
            gameState.playerPower += 150;
```

**Linha 2059**: Aumenta poder do jogador

```javascript
            gameState.playerMaxHP += 200;
```

**Linha 2060**: Aumenta HP m√°ximo

```javascript
            gameState.playerHP = gameState.playerMaxHP;
```

**Linha 2061**: Restaura HP completo

```javascript
            const baseScore = 1500;
```

**Linha 2063**: Pontua√ß√£o base

```javascript
            const comboBonus = gameState.maxCombo * 75;
```

**Linha 2064**: B√¥nus por combo m√°ximo

```javascript
            const accuracyBonus = Math.floor((gameState.battleStats.correctAnswers / gameState.battleStats.questionsAnswered) * 750);
```

**Linha 2065**: B√¥nus por precis√£o

```javascript
            const criticalBonus = gameState.battleStats.criticalHits * 300;
```

**Linha 2066**: B√¥nus por cr√≠ticos

```javascript
            const timeBonus = gameState.timeLeft * 15;
```

**Linha 2067**: B√¥nus por tempo restante

```javascript
            const finalScore = baseScore + comboBonus + accuracyBonus + criticalBonus + timeBonus;
```

**Linha 2069**: Calcula pontua√ß√£o final

```javascript
            gameState.totalScore += finalScore;
```

**Linha 2070**: Adiciona √† pontua√ß√£o total

```javascript
            document.getElementById('resultTitle').textContent = 'VIT√ìRIA √âPICA!';
```

**Linha 2072**: Define t√≠tulo de vit√≥ria

```javascript
            document.getElementById('resultTitle').className = 'result-title victory-title';
```

**Linha 2073**: Aplica classe de vit√≥ria

```javascript
            document.getElementById('resultContent').style.borderColor = '#00ff00';
```

**Linha 2074**: Define borda verde

```javascript
            document.getElementById('resultMessage').innerHTML = `
                üèÜ Voc√™ derrotou o Mestre ${gameState.currentBoss.name}! üèÜ<br>
                <span style="font-size: 1.2rem; color: #00ff00; margin-top: 1rem; display: block;">
                    +150 Poder | +200 HP M√°ximo | N√≠vel ${gameState.playerLevel}
                </span>
            `;
```

**Linha 2076-2080**: Define mensagem de vit√≥ria

```javascript
            document.getElementById('finalScore').textContent = finalScore;
```

**Linha 2082**: Mostra pontua√ß√£o final

```javascript
            document.getElementById('finalCombo').textContent = gameState.maxCombo;
```

**Linha 2083**: Mostra combo m√°ximo

```javascript
            document.getElementById('finalTime').textContent = gameState.timeLeft + 's';
```

**Linha 2084**: Mostra tempo restante

```javascript
            saveGameState();
```

**Linha 2086**: Salva estado do jogo

```javascript
            if (gameState.victories.length >= 15) {
```

**Linha 2088**: Se derrotou todos os professores

```javascript
                setTimeout(() => {
                    document.getElementById('resultTitle').textContent = 'MESTRE SUPREMO UNIVERSAL!';
                    document.getElementById('resultMessage').innerHTML = `
                        üåü PARAB√âNS! VOC√ä DOMINOU TODA A ACADEMIA! üåü<br>
                        <span style="font-size: 1.2rem; color: #ffff00; margin-top: 1rem; display: block;">
                            Voc√™ √© agora o MAIOR ESTUDANTE DO UNIVERSO!<br>
                            Poder Final: ${gameState.playerPower} | N√≠vel: ${gameState.playerLevel}<br>
                            Pontua√ß√£o Total: ${gameState.totalScore}
                        </span>
                    `;
                }, 3000);
```

**Linha 2089-2098**: Mensagem especial de conclus√£o total

```javascript
            }
```

**Linha 2099**: Fecha condi√ß√£o

```javascript
            document.getElementById('resultScreen').style.display = 'flex';
```

**Linha 2101**: Mostra tela de resultado

```javascript
        }
```

**Linha 2102**: Fecha fun√ß√£o victory

## SE√á√ÉO 65: DERROTA E CONTINUA√á√ÉO (Linhas 2104-2150)

```javascript
        function defeat() {
```

**Linha 2104**: Fun√ß√£o de derrota

```javascript
            gameState.defeats++;
```

**Linha 2105**: Incrementa contador de derrotas

```javascript
            gameState.currentCombo = 0;
```

**Linha 2106**: Reseta combo

```javascript
            document.getElementById('resultTitle').textContent = 'DERROTA √âPICA!';
```

**Linha 2108**: Define t√≠tulo de derrota

```javascript
            document.getElementById('resultTitle').className = 'result-title defeat-title';
```

**Linha 2109**: Aplica classe de derrota

```javascript
            document.getElementById('resultContent').style.borderColor = '#ff0000';
```

**Linha 2110**: Define borda vermelha

```javascript
            document.getElementById('resultMessage').innerHTML = `
                üíÄ O Mestre ${gameState.currentBoss.name} provou sua superioridade... üíÄ<br>
                <span style="font-size: 1.2rem; color: #ff6666; margin-top: 1rem; display: block;">
                    Mas o conhecimento √© eterno! Estude mais e tente novamente!<br>
                    "O fracasso √© apenas uma oportunidade para recome√ßar com mais intelig√™ncia."
                </span>
            `;
```

**Linha 2112-2118**: Define mensagem de derrota motivacional

```javascript
            document.getElementById('finalScore').textContent = '0';
```

**Linha 2120**: Pontua√ß√£o zero na derrota

```javascript
            document.getElementById('finalCombo').textContent = gameState.maxCombo;
```

**Linha 2121**: Mostra combo m√°ximo alcan√ßado

```javascript
            document.getElementById('finalTime').textContent = '0s';
```

**Linha 2122**: Tempo zero na derrota

```javascript
            saveGameState();
```

**Linha 2124**: Salva estado do jogo

```javascript
            document.getElementById('resultScreen').style.display = 'flex';
```

**Linha 2125**: Mostra tela de resultado

```javascript
        }
```

**Linha 2126**: Fecha fun√ß√£o defeat

```javascript
        function continueJourney() {
```

**Linha 2128**: Fun√ß√£o para continuar jornada

```javascript
            gameState.isInBattle = false;
```

**Linha 2129**: Marca como fora de batalha

```javascript
            gameState.playerHP = gameState.playerMaxHP;
```

**Linha 2130**: Restaura HP completo

```javascript
            gameState.currentCombo = 0;
```

**Linha 2131**: Reseta combo

```javascript
            document.getElementById('resultScreen').style.display = 'none';
```

**Linha 2132**: Esconde tela de resultado

```javascript
            showProfessorSelect();
```

**Linha 2133**: Volta para sele√ß√£o de professores

```javascript
        }
```

**Linha 2134**: Fecha fun√ß√£o continueJourney

```javascript
        function fleeBattle() {
```

**Linha 2136**: Fun√ß√£o para fugir da batalha

```javascript
            if (confirm('‚ö†Ô∏è Tem certeza que deseja fugir? Voc√™ perder√° 150 de poder e ser√° marcado como covarde!')) {
```

**Linha 2137**: Confirma√ß√£o de fuga com penalidade

```javascript
                gameState.playerPower = Math.max(100, gameState.playerPower - 150);
```

**Linha 2138**: Reduz poder (m√≠nimo 100)

```javascript
                gameState.defeats++;
```

**Linha 2139**: Incrementa derrotas

```javascript
                gameState.currentCombo = 0;
```

**Linha 2140**: Reseta combo

```javascript
                continueJourney();
```

**Linha 2141**: Continua jornada

```javascript
            }
```

**Linha 2142**: Fecha condi√ß√£o

```javascript
        }
```

**Linha 2143**: Fecha fun√ß√£o fleeBattle

## SE√á√ÉO 66: ATUALIZA√á√ÉO DA UI E PERSIST√äNCIA (Linhas 2145-2180)

```javascript
        function updateUI() {
```

**Linha 2145**: Fun√ß√£o para atualizar interface

```javascript
            document.getElementById('playerLevel').textContent = gameState.playerLevel;
```

**Linha 2146**: Atualiza n√≠vel do jogador

```javascript
            document.getElementById('playerPower').textContent = gameState.playerPower;
```

**Linha 2147**: Atualiza poder do jogador

```javascript
            document.getElementById('victories').textContent = `${gameState.victories.length}/15`;
```

**Linha 2148**: Atualiza contador de vit√≥rias

```javascript
            document.getElementById('defeats').textContent = gameState.defeats;
```

**Linha 2149**: Atualiza contador de derrotas

```javascript
            document.getElementById('maxCombo').textContent = gameState.maxCombo;
```

**Linha 2150**: Atualiza combo m√°ximo

```javascript
        }
```

**Linha 2151**: Fecha fun√ß√£o updateUI

```javascript
        function saveGameState() {
```

**Linha 2153**: Fun√ß√£o para salvar estado do jogo

```javascript
            localStorage.setItem('academiaMestresSupremoDefinitivo', JSON.stringify(gameState));
```

**Linha 2154**: Salva no localStorage como JSON

```javascript
        }
```

**Linha 2155**: Fecha fun√ß√£o saveGameState

```javascript
        function loadGameState() {
```

**Linha 2157**: Fun√ß√£o para carregar estado do jogo

```javascript
            const saved = localStorage.getItem('academiaMestresSupremoDefinitivo');
```

**Linha 2158**: Obt√©m dados salvos

```javascript
            if (saved) {
```

**Linha 2159**: Se h√° dados salvos

```javascript
                const savedState = JSON.parse(saved);
```

**Linha 2160**: Converte JSON para objeto

```javascript
                gameState = { ...gameState, ...savedState };
```

**Linha 2161**: Mescla com estado atual (spread operator)

```javascript
            }
```

**Linha 2162**: Fecha condi√ß√£o

```javascript
        }
```

**Linha 2163**: Fecha fun√ß√£o loadGameState

## SE√á√ÉO 67: RESET E FUN√á√ïES INFORMATIVAS (Linhas 2165-2220)

```javascript
        function resetAllProgress() {
```

**Linha 2165**: Fun√ß√£o para resetar todo o progresso

```javascript
            if (confirm('‚ö†Ô∏è ATEN√á√ÉO SUPREMA! Isso apagar√° TODO seu progresso √©pico! Tem absoluta certeza?')) {
```

**Linha 2166**: Primeira confirma√ß√£o

```javascript
                if (confirm('üî• √öLTIMA CHANCE! Voc√™ realmente quer destruir sua jornada heroica?')) {
```

**Linha 2167**: Segunda confirma√ß√£o

```javascript
                    localStorage.removeItem('academiaMestresSupremoDefinitivo');
```

**Linha 2168**: Remove dados do localStorage

```javascript
                    gameState = {
                        playerLevel: 1,
                        playerPower: 100,
                        playerHP: 500,
                        playerMaxHP: 500,
                        victories: [],
                        defeats: 0,
                        maxCombo: 0,
                        currentBoss: null,
                        bossHP: 1000,
                        bossMaxHP: 1000,
                        challengeTimer: null,
                        timeLeft: 30,
                        currentChallenge: null,
                        isInBattle: false,
                        currentCombo: 0,
                        totalScore: 0,
                        battleStats: {
                            questionsAnswered: 0,
                            correctAnswers: 0,
                            criticalHits: 0,
                            timeBonus: 0
                        }
                    };
```

**Linha 2169-2190**: Reseta gameState para valores iniciais

```javascript
                    generateProfessorGrid();
```

**Linha 2191**: Regenera grade de professores

```javascript
                    updateUI();
```

**Linha 2192**: Atualiza interface

```javascript
                    alert('üåü Universo resetado! Sua nova jornada √©pica come√ßa AGORA!');
```

**Linha 2193**: Alerta de confirma√ß√£o

```javascript
                }
```

**Linha 2194**: Fecha segunda confirma√ß√£o

```javascript
            }
```

**Linha 2195**: Fecha primeira confirma√ß√£o

```javascript
        }
```

**Linha 2196**: Fecha fun√ß√£o resetAllProgress

```javascript
        function showInstructions() {
```

**Linha 2198**: Fun√ß√£o para mostrar instru√ß√µes

```javascript
            alert(`‚öîÔ∏è MANUAL DO GUERREIRO - ACADEMIA DOS MESTRES SUPREMOS ‚öîÔ∏è

üéØ MISS√ÉO SUPREMA:
‚Ä¢ Derrote todos os 15 mestres supremos em combate √©pico
‚Ä¢ Cada mestre possui HP √∫nico, ataques devastadores e frases lend√°rias
‚Ä¢ Responda perguntas complexas para causar dano massivo
‚Ä¢ Torne-se o MESTRE SUPREMO UNIVERSAL!

‚öîÔ∏è SISTEMA DE COMBATE √âPICO:
‚Ä¢ HP dos mestres: 1200-1800 (EXTREMAMENTE ALTO!)
‚Ä¢ Seu HP aumenta +200 a cada vit√≥ria
‚Ä¢ Respostas corretas = 80-300+ de dano (com combo)
‚Ä¢ Respostas erradas = 60-160 de dano recebido
‚Ä¢ Timer agressivo: 15-35 segundos por pergunta
‚Ä¢ Sistema de COMBO: +25% dano por acerto consecutivo

üî• MEC√ÇNICAS AVAN√áADAS:
‚Ä¢ CR√çTICOS: 20% chance de dano duplo
‚Ä¢ ATAQUES ESPECIAIS: Mestres usam 25% das vezes
‚Ä¢ F√öRIA: Mestres ficam mais fortes com HP baixo
‚Ä¢ COMBO SYSTEM: Multiplicador de dano por sequ√™ncia
‚Ä¢ POWER SCALING: Cada vit√≥ria te deixa mais forte

üíÄ DIFICULDADE EXTREMA:
‚Ä¢ 15 mestres √∫nicos com personalidades √©picas
‚Ä¢ Perguntas espec√≠ficas e conhecimento profundo
‚Ä¢ Frases intimidadoras e ataques tem√°ticos
‚Ä¢ Sistema de fuga com penalidade severa (-150 poder)
‚Ä¢ Progress√£o lenta mas recompensadora

üèÜ SISTEMA DE RANKING:
‚Ä¢ Mestre Supremo Universal: 15/15 vit√≥rias
‚Ä¢ Lenda Acad√™mica: 12+ vit√≥rias
‚Ä¢ Guerreiro do Conhecimento: 8+ vit√≥rias
‚Ä¢ Estudante Avan√ßado: 5+ vit√≥rias
‚Ä¢ Aprendiz Corajoso: 1+ vit√≥rias

‚ö° ESTRAT√âGIAS SUPREMAS:
‚Ä¢ Mantenha combos altos para dano m√°ximo
‚Ä¢ Estude as mat√©rias antes das batalhas
‚Ä¢ Respostas r√°pidas evitam ataques extras
‚Ä¢ Cada mestre tem padr√µes √∫nicos
‚Ä¢ Use o tempo sabiamente - cada segundo conta

BOA SORTE, GUERREIRO SUPREMO DO CONHECIMENTO! üî•‚öîÔ∏èüåü`);
```

**Linha 2199-2240**: Manual completo do jogo em alert

```javascript
        }
```

**Linha 2241**: Fecha fun√ß√£o showInstructions

## SE√á√ÉO 68: HALL DA FAMA E INICIALIZA√á√ÉO (Linhas 2243-2310)

```javascript
        function showHallOfFame() {
```

**Linha 2243**: Fun√ß√£o para mostrar hall da fama

```javascript
            const winRate = gameState.victories.length + gameState.defeats > 0 ?
                ((gameState.victories.length / (gameState.victories.length + gameState.defeats)) * 100).toFixed(1) : 0;
```

**Linha 2244-2245**: Calcula taxa de vit√≥ria

```javascript
            let rank = 'Iniciante';
            let rankEmoji = 'üìö';
            if (gameState.victories.length >= 15) {
                rank = 'üåü MESTRE SUPREMO UNIVERSAL';
                rankEmoji = 'üåü';
            } else if (gameState.victories.length >= 12) {
                rank = 'üèÜ LENDA ACAD√äMICA';
                rankEmoji = 'üèÜ';
            } else if (gameState.victories.length >= 8) {
                rank = '‚öîÔ∏è GUERREIRO DO CONHECIMENTO';
                rankEmoji = '‚öîÔ∏è';
            } else if (gameState.victories.length >= 5) {
                rank = 'ü•á ESTUDANTE AVAN√áADO';
                rankEmoji = 'ü•á';
            } else if (gameState.victories.length >= 1) {
                rank = 'ü•â APRENDIZ CORAJOSO';
                rankEmoji = 'ü•â';
            }
```

**Linha 2247-2261**: Determina rank baseado em vit√≥rias

```javascript
            alert(`üèÜ HALL DA FAMA √âPICO - SUAS CONQUISTAS SUPREMAS üèÜ

${rankEmoji} CLASSIFICA√á√ÉO ATUAL: ${rank}

üìä ESTAT√çSTICAS DE PODER:
üéì N√≠vel Supremo: ${gameState.playerLevel}
‚ö° Poder C√≥smico: ${gameState.playerPower}
‚ù§Ô∏è HP M√°ximo: ${gameState.playerMaxHP}
üåü Pontua√ß√£o Total: ${gameState.totalScore}

‚öîÔ∏è HIST√ìRICO DE BATALHAS √âPICAS:
üèÜ Vit√≥rias Gloriosas: ${gameState.victories.length}/15
üíÄ Derrotas Honrosas: ${gameState.defeats}
üìà Taxa de Vit√≥ria: ${winRate}%
üî• Combo M√°ximo: ${gameState.maxCombo}x

üéñÔ∏è MESTRES DERROTADOS:
${gameState.victories.length > 0 ? 
    professors.filter(p => gameState.victories.includes(p.id))
        .map(p => `‚öîÔ∏è Mestre ${p.name} (${p.subject}) - Poder: ${p.powerLevel}`)
        .join('\n') :
    'üíÄ Nenhum mestre derrotado ainda... A jornada √©pica te aguarda!'
}

${gameState.victories.length >= 15 ?
    'üåüüèÜüåü PARAB√âNS! VOC√ä √â O MESTRE SUPREMO UNIVERSAL! üåüüèÜüåü' :
    `üí™ Continue sua jornada √©pica! Faltam ${15 - gameState.victories.length} mestres para a gl√≥ria suprema!`
}

üî• "O conhecimento √© poder, e o poder √© eterno!" üî•`);
```

**Linha 2263-2290**: Alert com estat√≠sticas completas do jogador

```javascript
        }
```

**Linha 2291**: Fecha fun√ß√£o showHallOfFame

```javascript
        window.onload = init;
```

**Linha 2293**: Executa fun√ß√£o init quando p√°gina carrega

```javascript
    </script>
```

**Linha 2294**: Fecha se√ß√£o JavaScript

```html
</body>
```

**Linha 2295**: Fecha elemento body

```html
</html>
```

**Linha 2296**: Fecha documento HTML

---

## RESUMO COMPLETO DO C√ìDIGO

Este c√≥digo implementa um jogo educativo completo chamado "Academia dos Mestres Supremos - Edi√ß√£o Definitiva". Aqui est√° um resumo das principais funcionalidades:

### **ESTRUTURA GERAL:**

- **HTML**: Estrutura com 4 telas principais (menu, sele√ß√£o, batalha, resultado)
- **CSS**: Mais de 900 linhas de estilos com anima√ß√µes, gradientes e responsividade
- **JavaScript**: L√≥gica completa do jogo com 15 professores √∫nicos


### **CARACTER√çSTICAS PRINCIPAIS:**

1. **Sistema de Part√≠culas**: Efeitos visuais animados de fundo
2. **15 Professores √önicos**: Cada um com mat√©ria, frases, desafios e dificuldade espec√≠fica
3. **Sistema de Combate**: HP, dano, combo, cr√≠ticos e ataques especiais
4. **Dois Tipos de Desafio**: M√∫ltipla escolha e c√°lculo matem√°tico
5. **Progress√£o**: N√≠veis, poder, HP crescente e desbloqueio sequencial
6. **Persist√™ncia**: Salvamento autom√°tico no localStorage
7. **Interface Rica**: Anima√ß√µes, efeitos de dano, timers e estat√≠sticas
8. **Responsividade**: Adapta√ß√£o para dispositivos m√≥veis


### **MEC√ÇNICAS DE JOGO:**

- **Combo System**: +25% de dano por acerto consecutivo
- **Cr√≠ticos**: 20% de chance de dano duplo
- **Boss Scaling**: Inimigos ficam mais fortes com HP baixo
- **Timer Pressure**: Tempo limitado por pergunta
- **Risk/Reward**: Penalidades por fuga, recompensas por vit√≥ria


O c√≥digo demonstra uma implementa√ß√£o completa e profissional de um jogo educativo com mec√¢nicas complexas, interface polida e experi√™ncia de usu√°rio envolvente.
